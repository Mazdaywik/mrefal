$MODULE Context;

$IMPORT MModulesList;

$ENTRY Create {
	= (
		( ModulesList )
		( CachedSyms )
		( ErrorList )
	);
}

* <UpdateModuleInfo t.Context (e.ModName) e.NewOptionsList>
*	== t.UpdatedContext
$ENTRY UpdateModuleInfo
	( t.ModulesList t.CachedSyms t.ErrorList ) (e.ModName) e.NewOptions =
		( <MModulesList::UpdateModuleInfo
				t.ModulesList
				(e.ModName)
				e.NewOptions
			> t.CachedSyms t.ErrorList
		);

$ENTRY LastModule
	( t.ModulesList t.CachedSyms t.ErrorList )
	e.ModName =
		( <MModulesList::LastModule t.ModulesList e.ModName>
			t.CachedSyms t.ErrorList
		);

$ENTRY Destroy {
	( t.ModulesList t.CachedSyms t.ErrorList ) = ;
}

* <ExtractOption t.Context s.Option e.ModName>
*	== t.Context Found e.Option
*	== t.Context ModuleInfoNotFound
*	!fail abort!
$ENTRY ExtractOption
	( t.ModulesList t.CachedSyms t.ErrorList )
	s.Option e.ModName =
		( t.ModulesList t.CachedSyms t.ErrorList )
		<MModulesList::ExtractOption
			t.ModulesList
			s.Option
			e.ModName
		>;

$ENTRY GetProgName
	( t.ModulesList t.CachedSyms t.ErrorList ) =
		( t.ModulesList t.CachedSyms t.ErrorList )
		<MModulesList::GetProgName t.ModulesList>;

* <ExtractModulesList t.Context>
*	== t.Context (e.ModuleName)*
$ENTRY ExtractModulesList
	( t.ModulesList t.CachedSyms t.ErrorList ) =
		( t.ModulesList t.CachedSyms t.ErrorList )
		<MModulesList::ExtractModulesList
			t.ModulesList
		>;

* <GetErrorList t.Context>
*	== t.Context t.ErrorInfo*
$ENTRY GetErrorList
	( t.ModulesList t.CachedSyms ( ErrorList e.Errors ) ) =
		( t.ModulesList t.CachedSyms ( ErrorList e.Errors ) )
		e.Errors;

* <PutErrorList t.Context t.ErrorInfo*>
*	== t.UpdatedContext
$ENTRY PutErrorList
	( t.ModulesList t.CachedSyms ( ErrorList e.OldErrors ) )
	e.NewErrors =
		( t.ModulesList
			t.CachedSyms
			( ErrorList e.OldErrors )
		);

* <AppendError t.Context t.ErrorInfo>
*	== t.UpdatedContext
$ENTRY AppendError
	( t.ModulesList t.CachedSyms ( ErrorList e.Errors ) )
	t.ErrorInfo =
		( t.ModulesList
			t.CachedSyms
			( ErrorList e.Errors t.ErrorInfo )
		);

$END Context.
