
.mref:

Module = ModuleHeader ModuleBody ModuleTailer .
ModuleHeader = ModuleType ModuleName ';' | '$program' ModuleName ';' .
ModuleType = '$module' | '$program' | '$clearmodule' .
ModuleTailer = '$end' ModuleName '.' .
ModuleName = QualifiedName .
ModuleBody = ModuleElement* .

QualifiedName = IDENTIFIER | QuadQualified | DotQualified .
QuadQualified =
	IDENTIFIER '::' IDENTIFIER | QuadQualified '::' IDENTIFIER .
DotQualified =
	IDENTIFIER '.' IDENTIFIER | DotQualifier '.' IDENTIFIER .

ModuleElement = ImportBlock | FunctionDefinition | SwapDefinition
	| ADTDefinition | ';' .

ImportBlock =
	'$import' ModuleImport { ',' ModuleImport } ';' .
ModuleImport = [ ModuleAlias '=' ] ModuleName .
ModuleAlias = IDENTIFIER .

SwapDefinition = '$swap' SwapList ';' .
SwapList = SwapName | SwapName ',' SwapList .
SwapName = IDENTIFIER .

FunctionDefinition = [ '$entry' ] FunctionName FunctionBody .
FunctionName = IDENTIFIER .
FunctionBody = Block | Sentence .
Block = '{' Sentence* '}' .

Sentence = PatternExpr '=' ResultExpr ';' .

CommonTerm =
	IDENTIFIER | VARIABLE | LITERAL | MACRO | DQWORD | FnPtr .
PatternExpr = PatternTerm* .
PatternTerm =
	CommonTerm | '(' PatternExpr ')' | '[' ADTName PatternExpr ']' .
ResultExpr = ResultTerm* .
ResultTerm =
	CommonTerm | '(' ResultExpr ')' | '[' ADTName ResultTerm ']'
	| FunctionCall .
FunctionCall = '<' Callable ResultExpr '>' .
Callable = QualifiedName | SwapName | S-VARIABLE | FnPtr .

ADTDefinition = '$data' ADTList .
ADTList = ADTName | ADTName ',' ADTList .
ADTName = INENTIFIER .

.msym:

SymModule = ModuleHeader SymModuleBody ModuleTailer .
SymModuleBody = SymModuleElement* .
SymModuleElement = FunctionDeclaration | ImportBlock .
FunctionDeclaration = '$entry' FunctionName ';' .