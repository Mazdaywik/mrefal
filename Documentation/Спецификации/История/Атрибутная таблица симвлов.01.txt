    Атрибутная таблица символов

  Мотивация. Таблица символов для синтаксического анализатора, имеющаяся в текущей версии компиля-
тора (0.1.794) предназначена для хранения информации об имени текущего модуля, именах импортирован-
ных модулей и информации о функциях. К фукциям также относятся статические ящики. Информация о функ-
циях включает в себя имя функции и тип вызова функции (Entry, Local и Swap). Также таблица символов
предотвращает конфликты имён между указаннными сущностями. Таблица сложна, реализована криво.
  Предполагается взамен существующей создать атрибутную таблицу символов. Сама таблица не должна
делать разницы между различными типами имён: будь то имя модуля, импортируемого модуля, функции, ста-
тического ящика, абстрактного типа данных или же других сущностей, необходимость в которых может воз-
никнуть в будущем. Каждое имя обладает набором атрибутов, для него характерных. Есть общие атрибуты,
например, тип имени (модуль, импорт, фукция, swap или АТД). Или же атрибуты, характерные для отдель-
ных типов сущностей, например для функции это область видимости (Local или Entry), или, если имя
импортируемого модуля является псевдонимом, то атрибутом может быть действительное имя модуля. За
счёт такой гибкости можно в таблице символов хранить и тела функций, как атрибуты этих функций (что
логично), а не передавать их отдельно как часть структуры "Модуль -- промежуточное представление".
  Данная особенность позволит упростить и синтаксический анализатор, избавляя от необходиомости
"таскать с собой" разобранные функции: после получения готового семантического дерева тело функции
сразу забрасывается в таблицу символов.

  TODO. Спецификация или ТЗ или что-то в этом роде.
  Таблица символов должна представлять собой ассоциативный массив, индексируемый по (квалифициро-
ванному) имени и атрибутам (внутри каждого имени). За образец можно взять список модулей, являющийся
частью контекста (см. Context и MModulesList). Список модулей индексируется именем модуля, затем ин-
дексация идёт по опциям.
  Таблица символов должна предоставлять следующие возможности:
  (*) Добавление имени в таблицу символов. В случае, если такое имя уже присутствует, таблица сим-
волов изменяться не должна.
  (*) Получение заданного атрибута заданного имени. Возвращаемое значение должно предусматривать
возможность сообщить об отсутствии этого имени.
  (*) Получение списка всех имён в таблице.
  (*) Получение списка атрибутов, связанных с данным именем. Возвращаемое значение должно предус-
матривать возможность сообщить об отсутствии этого имени.
  (*) Установка (обновление) значения заданного атрибута заданного имени. При отсутствии имени
оно должно создаваться с набором атрибутов по умолчанию (возможно, пустым).
  (*) Удаление имени из таблицы. Вопрос о том, что делать при отсутствии имени решится в процессе
кодирования.
  (*) Удаление атрибута заданного имени из таблицы. Предусловие: имя должно присутствовать в таб-
лице.
  (*) Проверка существования заданного имени.*
  (*) Получение списка имён с заданным атрибутом.*
  (*) Получение списка имён с заданным значением заданного атрибута.*
  (*) Удаление заданного атрибута у всех имён.*

  *Возможности, помеченные справа звёздочкой, являются необязательными. Они могут быть получены ком-
бинацией уже имеющихся средств.
  (*) На начальном этапе таблица символов должна предоставлять интерфейс старой таблицы символов.