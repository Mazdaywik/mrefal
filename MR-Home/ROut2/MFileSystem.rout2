MFileSystem::DoParseDirectory::Local {
	( Structure e.Directory '/' ) e.Name =
		( Structure e.Directory '/' ) e.Name ;
	( Structure e.Directory '\\' ) e.Name =
		( Structure e.Directory '\\' ) e.Name ;
	( Structure e.Directory ':' ) e.Name =
		( Structure e.Directory ':' ) e.Name ;
	( Structure ) e.Name =
		( Structure ) e.Name ;
	( Structure e.Directory s.Next ) e.Name =
		<MFileSystem::DoParseDirectory::Local ( Structure e.Directory ) s.Next e.Name > ;
}

MFileSystem::DoParseExt::Local {
	e.FileName '.' ( Structure e.Ext ) =
		<MFileSystem::DoParseDirectory::Local ( Structure e.FileName ) > ( Structure e.Ext ) ;
	e.FileName '/' ( Structure e.Ext ) =
		( Structure e.FileName '/' ) e.Ext ( Structure ) ;
	e.FileName '\\' ( Structure e.Ext ) =
		( Structure e.FileName '\\' ) e.Ext ( Structure ) ;
	e.FileName ':' ( Structure e.Ext ) =
		( Structure e.FileName ':' ) e.Ext ( Structure ) ;
	( Structure e.Ext ) =
		( Structure ) e.Ext ( Structure ) ;
	e.FileName s.Next ( Structure e.Ext ) =
		<MFileSystem::DoParseExt::Local e.FileName ( Structure s.Next e.Ext ) > ;
}

MFileSystem::ParseFileName::Entry {
	e.FileName =
		<MFileSystem::DoParseExt::Local e.FileName ( Structure ) > ;
}

MFileSystem::CompareFileTime::Entry {
	( Structure s.SameField e.First ) ( Structure s.SameField e.Second ) =
		<MFileSystem::CompareFileTime::Entry ( Structure e.First ) ( Structure e.Second ) > ;
	( Structure ) ( Structure ) =
		'=' ;
	( Structure s.DiffField1 e.Tail1 ) ( Structure s.DiffField2 e.Tail2 ) =
		<Math::Compare::Entry s.DiffField1 s.DiffField2 > ;
}

MFileSystem::ExtractAttrib::Local {
	s.Attrib ( Structure t.Path e.Att-B ( Structure s.Attrib e.Value ) e.Att-E ) =
		( Structure e.Value ) ;
	s.Attrib ( Structure t.Path e.Attribs ) =
		<MSelfDiag::Error::Entry 'Unknown file attribute ' s.Attrib > ;
	s.Attrib t.OneFile e.Tail =
		<MSelfDiag::Error::Entry 'Found many files in ExtractAttrib ' t.OneFile e.Tail > ;
}

MFileSystem::CheckExistAndGetAttrib::Local {
	s.Attribute False e.FileName =
		FileNotFound ;
	s.Attribute True e.FileName =
		<MFileSystem::ExtractAttrib::Local s.Attribute <MFileSystem::FilesInfo::Entry e.FileName > > ;
}

MFileSystem::FileAttribute::Entry {
	s.Attribute e.FileName =
		<MFileSystem::CheckExistAndGetAttrib::Local s.Attribute <MFileSystem::ExistFile-T::Entry e.FileName > > ;
}

MFileSystem::AppendPath::Local {
	( Structure e.Path ) e.OtherInfo ( Structure LongName e.Name ) =
		( Structure ( Structure e.Path '\\' e.Name ) e.OtherInfo ( Structure LongName e.Name ) ) ;
	( Structure e.Path ) =
		;
}

MFileSystem::ParseTime::Local {
	e.Hours ':' e.Minutes =
		<MStrings::Numb::Entry e.Hours > <MStrings::Numb::Entry e.Minutes > ;
}

MFileSystem::ParseDate::Local {
	e.Day '.' e.Month '.' e.Year =
		<MStrings::Numb::Entry e.Year > <MStrings::Numb::Entry e.Month > <MStrings::Numb::Entry e.Day > ;
}

MFileSystem::Trim::Local {
	' ' e.Line =
		<MFileSystem::Trim::Local e.Line > ;
	e.Line ' ' =
		<MFileSystem::Trim::Local e.Line > ;
	e.Line =
		e.Line ;
}

MFileSystem::ParseSize::Local {
	e.Begin ' ' e.End =
		<MFileSystem::ParseSize::Local e.Begin e.End > ;
	'<' e.Catalog '>' =
		Directory ;
	e.Digits =
		<MStrings::Numb::Entry e.Digits > ;
}

MFileSystem::CutSize::Local {
	( Structure e.Size ) e.Name =
		( Structure Size <MFileSystem::ParseSize::Local e.Size > ) ( Structure LongName e.Name ) ;
}

MFileSystem::ParseDateTime::Local {
	( Structure e.Date ) e.Time =
		<MFileSystem::ParseDate::Local <MFileSystem::Trim::Local e.Date > > <MFileSystem::ParseTime::Local <MFileSystem::Trim::Local e.Time > > ;
}

MFileSystem::CutDateTime::Local {
	( Structure e.DateTime ) e.SizeAndName =
		( Structure DateTime <MFileSystem::ParseDateTime::Local <MStrings::First::Entry 10 e.DateTime > > ) <MFileSystem::CutSize::Local <MStrings::First::Entry 19 e.SizeAndName > > ;
}

MFileSystem::ParseLine::Local {
	'   ' e.Tail =
		;
	e.Line =
		<MFileSystem::CutDateTime::Local <MStrings::First::Entry 17 e.Line > > ;
}

MFileSystem::ReadFileList::Local {
	( Structure e.Path ) ( Structure e.Line ) e.Tail =
		<MFileSystem::AppendPath::Local ( Structure e.Path ) <MFileSystem::ParseLine::Local e.Line > > <MFileSystem::ReadFileList::Local ( Structure e.Path ) e.Tail > ;
	( Structure e.Path ) =
		;
}

MFileSystem::ParseListing::Local {
	t.?Hdr1 t.?Hdr2 ( Structure ) ( Structure e.?Text1 s.Disk ':' e.Path ) ( Structure ) e.Tail =
		<MFileSystem::ReadFileList::Local ( Structure s.Disk ':' e.Path ) e.Tail > ;
	e.Other =
		<MSelfDiag::Error::Entry 'Directory listing error: ' e.Other > ;
}

MFileSystem::FilesInfo::Entry {
	e.Mask =
		<MOS::System::Entry 'dir ' e.Mask '>~dirlst.tmp 2>nul' > <MFileSystem::ParseListing::Local <MDosWinRecoder::DosToWin::Entry <FileIO::Load::Entry '~dirlst.tmp' > > > <MOS::System::Entry 'del ~dirlst.tmp' > ;
}

MFileSystem::ExistFile-T::Entry {
	e.FileName =
		<MRefalRTS::ExistFile::Entry e.FileName > e.FileName ;
}

MFileSystem::ExistFile::Entry {
	e.FileName =
		<MRefalRTS::ExistFile::Entry e.FileName > ;
}

MFileSystem::FnPtr::Local {
	ExistFile =
		$MFileSystem::ExistFile::Entry$ ;
	ExistFile-T =
		$MFileSystem::ExistFile-T::Entry$ ;
	FilesInfo =
		$MFileSystem::FilesInfo::Entry$ ;
	ParseListing =
		$MFileSystem::ParseListing::Local$ ;
	ReadFileList =
		$MFileSystem::ReadFileList::Local$ ;
	ParseLine =
		$MFileSystem::ParseLine::Local$ ;
	CutDateTime =
		$MFileSystem::CutDateTime::Local$ ;
	ParseDateTime =
		$MFileSystem::ParseDateTime::Local$ ;
	CutSize =
		$MFileSystem::CutSize::Local$ ;
	ParseSize =
		$MFileSystem::ParseSize::Local$ ;
	Trim =
		$MFileSystem::Trim::Local$ ;
	ParseDate =
		$MFileSystem::ParseDate::Local$ ;
	ParseTime =
		$MFileSystem::ParseTime::Local$ ;
	AppendPath =
		$MFileSystem::AppendPath::Local$ ;
	FileAttribute =
		$MFileSystem::FileAttribute::Entry$ ;
	CheckExistAndGetAttrib =
		$MFileSystem::CheckExistAndGetAttrib::Local$ ;
	ExtractAttrib =
		$MFileSystem::ExtractAttrib::Local$ ;
	CompareFileTime =
		$MFileSystem::CompareFileTime::Entry$ ;
	ParseFileName =
		$MFileSystem::ParseFileName::Entry$ ;
	DoParseExt =
		$MFileSystem::DoParseExt::Local$ ;
	DoParseDirectory =
		$MFileSystem::DoParseDirectory::Local$ ;
	FnPtr =
		$MFileSystem::FnPtr::Local$ ;
	MDosWinRecoder WinToDos =
		$MDosWinRecoder::WinToDos::Entry$ ;
	MDosWinRecoder DosToWin =
		$MDosWinRecoder::DosToWin::Entry$ ;
	MRefalRTS Prout =
		$MRefalRTS::Prout::Entry$ ;
	MRefalRTS Card =
		$MRefalRTS::Card::Entry$ ;
	MRefalRTS Open =
		$MRefalRTS::Open::Entry$ ;
	MRefalRTS Get =
		$MRefalRTS::Get::Entry$ ;
	MRefalRTS Put =
		$MRefalRTS::Put::Entry$ ;
	MRefalRTS Putout =
		$MRefalRTS::Putout::Entry$ ;
	MRefalRTS Arg =
		$MRefalRTS::Arg::Entry$ ;
	MRefalRTS Exit =
		$MRefalRTS::Exit::Entry$ ;
	MRefalRTS ExistFile =
		$MRefalRTS::ExistFile::Entry$ ;
	MRefalRTS ExistFile-T =
		$MRefalRTS::ExistFile-T::Entry$ ;
	MRefalRTS System =
		$MRefalRTS::System::Entry$ ;
	MRefalRTS Env =
		$MRefalRTS::Env::Entry$ ;
	MRefalRTS Upper =
		$MRefalRTS::Upper::Entry$ ;
	MRefalRTS Lower =
		$MRefalRTS::Lower::Entry$ ;
	MRefalRTS Lenw =
		$MRefalRTS::Lenw::Entry$ ;
	MRefalRTS Numb =
		$MRefalRTS::Numb::Entry$ ;
	MRefalRTS Symb =
		$MRefalRTS::Symb::Entry$ ;
	MRefalRTS Ord =
		$MRefalRTS::Ord::Entry$ ;
	MRefalRTS Chr =
		$MRefalRTS::Chr::Entry$ ;
	MRefalRTS Add =
		$MRefalRTS::Add::Entry$ ;
	MRefalRTS Sub =
		$MRefalRTS::Sub::Entry$ ;
	MRefalRTS Compare =
		$MRefalRTS::Compare::Entry$ ;
	MOS System =
		$MOS::System::Entry$ ;
	MOS Arg =
		$MOS::Arg::Entry$ ;
	MOS ArgList =
		$MOS::ArgList::Entry$ ;
	MOS ProgName =
		$MOS::ProgName::Entry$ ;
	MOS Exit =
		$MOS::Exit::Entry$ ;
	MOS EnvList =
		$MOS::EnvList::Entry$ ;
	MOS Env =
		$MOS::Env::Entry$ ;
	FileIO Init =
		$FileIO::Init::Entry$ ;
	FileIO Open =
		$FileIO::Open::Entry$ ;
	FileIO Close =
		$FileIO::Close::Entry$ ;
	FileIO NulClose =
		$FileIO::NulClose::Entry$ ;
	FileIO ReadLine =
		$FileIO::ReadLine::Entry$ ;
	FileIO WriteLine =
		$FileIO::WriteLine::Entry$ ;
	FileIO WriteLine-T =
		$FileIO::WriteLine-T::Entry$ ;
	FileIO ExtractFileName =
		$FileIO::ExtractFileName::Entry$ ;
	FileIO Load =
		$FileIO::Load::Entry$ ;
	FileIO Save =
		$FileIO::Save::Entry$ ;
	MSelfDiag Error =
		$MSelfDiag::Error::Entry$ ;
	MSelfDiag Log =
		$MSelfDiag::Log::Entry$ ;
	MSelfDiag Log-T =
		$MSelfDiag::Log-T::Entry$ ;
	MSelfDiag Assert-Eq-T =
		$MSelfDiag::Assert-Eq-T::Entry$ ;
	MSelfDiag Assert-NE-T =
		$MSelfDiag::Assert-NE-T::Entry$ ;
	MSelfDiag Assert-Eq =
		$MSelfDiag::Assert-Eq::Entry$ ;
	MSelfDiag Assert-NE =
		$MSelfDiag::Assert-NE::Entry$ ;
	MStrings Numb =
		$MStrings::Numb::Entry$ ;
	MStrings Symb =
		$MStrings::Symb::Entry$ ;
	MStrings Ord =
		$MStrings::Ord::Entry$ ;
	MStrings Chr =
		$MStrings::Chr::Entry$ ;
	MStrings Length =
		$MStrings::Length::Entry$ ;
	MStrings Length-T =
		$MStrings::Length-T::Entry$ ;
	MStrings Upper =
		$MStrings::Upper::Entry$ ;
	MStrings Lower =
		$MStrings::Lower::Entry$ ;
	MStrings First =
		$MStrings::First::Entry$ ;
	MStrings Seq =
		$MStrings::Seq::Entry$ ;
	MStrings Reverse =
		$MStrings::Reverse::Entry$ ;
	MStrings Trim =
		$MStrings::Trim::Entry$ ;
	Math Add =
		$Math::Add::Entry$ ;
	Math Sub =
		$Math::Sub::Entry$ ;
	Math Inc =
		$Math::Inc::Entry$ ;
	Math Dec =
		$Math::Dec::Entry$ ;
	Math Compare =
		$Math::Compare::Entry$ ;
	Math Compare-T =
		$Math::Compare-T::Entry$ ;
}

