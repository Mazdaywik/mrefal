MSelfDiag::Init::Entry {
	=
		<MSelfDiag::Nil::Local <MRefalRTS::System::Entry 'md Info>nul 2>nul' > > <MRefalRTS::Open::Entry 'w' 19 'Info/Log.txt' > ;
}

MSelfDiag::Nil::Local {
	e.X =
		;
}

MSelfDiag::PrintAssert::Local {
	( Structure e.SignFact ) t.Result t.Expected =
		<MSelfDiag::Error::Entry 'ASSERT VIOLATION: ' t.Result ' ' e.SignFact ' ' t.Expected > ;
	( Structure e.SignFact ) t.Result t.Expected e.Message =
		<MSelfDiag::Error::Entry 'ASSERT VIOLATION: ' t.Result ' ' e.SignFact ' ' t.Expected '(' e.Message ')' > ;
}

MSelfDiag::SwAssert::Local {
	t.Sign t.Sign ( Structure e.Result ) t.Expected e.Message =
		e.Result ;
	t.SignExpected t.SignFact t.Result t.Expected e.Message =
		<MSelfDiag::PrintAssert::Local t.SignFact t.Result t.Expected e.Message > ;
}

MSelfDiag::Assert-NE::Entry {
	t.Result t.Expected e.Message =
		<MSelfDiag::Nil::Local <MSelfDiag::Assert-NE-T::Entry t.Result t.Expected e.Message > > ;
}

MSelfDiag::Assert-Eq::Entry {
	t.Result t.Expected e.Message =
		<MSelfDiag::Nil::Local <MSelfDiag::Assert-Eq-T::Entry t.Result t.Expected e.Message > > ;
}

MSelfDiag::Assert-NE-T::Entry {
	t.Result t.Expected e.Message =
		<MSelfDiag::SwAssert::Local ( Structure '!=' ) <MSelfDiag::AssertAux::Local t.Result t.Expected > e.Message > ;
}

MSelfDiag::Assert-Eq-T::Entry {
	t.Result t.Expected e.Message =
		<MSelfDiag::SwAssert::Local ( Structure '=' ) <MSelfDiag::AssertAux::Local t.Result t.Expected > e.Message > ;
}

MSelfDiag::AssertAux::Local {
	t.ResultAndExpected t.ResultAndExpected =
		( Structure '=' ) t.ResultAndExpected t.ResultAndExpected ;
	t.Result t.Expected =
		( Structure '!=' ) t.Result t.Expected ;
}

MSelfDiag::Log-T::Entry {
	e.Message =
		<MRefalRTS::Put::Entry 19 e.Message > ;
}

MSelfDiag::Log::Entry {
	e.Message =
		<MRefalRTS::Putout::Entry 19 e.Message > ;
}

MSelfDiag::Error::Entry {
	e.Message =
		<MRefalRTS::Prout::Entry 'INTERNAL ERROR: ' e.Message > <MSelfDiag::Log::Entry 'INTERNAL ERROR: ' e.Message > <MRefalRTS::Exit::Entry 1 > ;
}

MSelfDiag::FnPtr::Local {
	Error =
		$MSelfDiag::Error::Entry$ ;
	Log =
		$MSelfDiag::Log::Entry$ ;
	Log-T =
		$MSelfDiag::Log-T::Entry$ ;
	AssertAux =
		$MSelfDiag::AssertAux::Local$ ;
	Assert-Eq-T =
		$MSelfDiag::Assert-Eq-T::Entry$ ;
	Assert-NE-T =
		$MSelfDiag::Assert-NE-T::Entry$ ;
	Assert-Eq =
		$MSelfDiag::Assert-Eq::Entry$ ;
	Assert-NE =
		$MSelfDiag::Assert-NE::Entry$ ;
	SwAssert =
		$MSelfDiag::SwAssert::Local$ ;
	PrintAssert =
		$MSelfDiag::PrintAssert::Local$ ;
	Nil =
		$MSelfDiag::Nil::Local$ ;
	Init =
		$MSelfDiag::Init::Entry$ ;
	FnPtr =
		$MSelfDiag::FnPtr::Local$ ;
	MRefalRTS Prout =
		$MRefalRTS::Prout::Entry$ ;
	MRefalRTS Print =
		$MRefalRTS::Print::Entry$ ;
	MRefalRTS Card =
		$MRefalRTS::Card::Entry$ ;
	MRefalRTS Open =
		$MRefalRTS::Open::Entry$ ;
	MRefalRTS Get =
		$MRefalRTS::Get::Entry$ ;
	MRefalRTS Put =
		$MRefalRTS::Put::Entry$ ;
	MRefalRTS Putout =
		$MRefalRTS::Putout::Entry$ ;
	MRefalRTS Arg =
		$MRefalRTS::Arg::Entry$ ;
	MRefalRTS Exit =
		$MRefalRTS::Exit::Entry$ ;
	MRefalRTS ExistFile =
		$MRefalRTS::ExistFile::Entry$ ;
	MRefalRTS ExistFile-T =
		$MRefalRTS::ExistFile-T::Entry$ ;
	MRefalRTS System =
		$MRefalRTS::System::Entry$ ;
	MRefalRTS Env =
		$MRefalRTS::Env::Entry$ ;
	MRefalRTS Upper =
		$MRefalRTS::Upper::Entry$ ;
	MRefalRTS Lower =
		$MRefalRTS::Lower::Entry$ ;
	MRefalRTS Lenw =
		$MRefalRTS::Lenw::Entry$ ;
	MRefalRTS Numb =
		$MRefalRTS::Numb::Entry$ ;
	MRefalRTS Symb =
		$MRefalRTS::Symb::Entry$ ;
	MRefalRTS Ord =
		$MRefalRTS::Ord::Entry$ ;
	MRefalRTS Chr =
		$MRefalRTS::Chr::Entry$ ;
	MRefalRTS Add =
		$MRefalRTS::Add::Entry$ ;
	MRefalRTS Sub =
		$MRefalRTS::Sub::Entry$ ;
	MRefalRTS Compare =
		$MRefalRTS::Compare::Entry$ ;
}

