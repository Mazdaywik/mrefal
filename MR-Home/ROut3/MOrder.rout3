b Local::MOrder::SwMerge
c $Local::MOrder::SwMerge$ {
c 	'>' ( $ADT::__StructureBrackets$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ t.$Index::First2$ e.$Index::Series2$ ) =
c 		t.$Index::First2$ <$Local::MOrder::Merge$ ( $ADT::__StructureBrackets$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ e.$Index::Series2$ ) > ;
c 	s.$Index::Other$ ( $ADT::__StructureBrackets$ t.$Index::First1$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ e.$Index::Series2$ ) =
c 		t.$Index::First1$ <$Local::MOrder::Merge$ ( $ADT::__StructureBrackets$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ e.$Index::Series2$ ) > ;
c }

b Local::MOrder::Merge
c $Local::MOrder::Merge$ {
c 	( $ADT::__StructureBrackets$ t.$Index::First1$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ t.$Index::First2$ e.$Index::Series2$ ) =
c 		<$Local::MOrder::SwMerge$ <$Entry::MOrder::Compare$ t.$Index::First1$ t.$Index::First2$ > ( $ADT::__StructureBrackets$ t.$Index::First1$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ t.$Index::First2$ e.$Index::Series2$ ) > ;
c 	( $ADT::__StructureBrackets$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ e.$Index::Series2$ ) =
c 		e.$Index::Series1$ e.$Index::Series2$ ;
c }

b Local::MOrder::MergeAdjacentPairs
c $Local::MOrder::MergeAdjacentPairs$ {
c 	( $ADT::__StructureBrackets$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ e.$Index::Series2$ ) e.$Index::Tail$ =
c 		( $ADT::__StructureBrackets$ <$Local::MOrder::Merge$ ( $ADT::__StructureBrackets$ e.$Index::Series1$ ) ( $ADT::__StructureBrackets$ e.$Index::Series2$ ) > ) <$Local::MOrder::MergeAdjacentPairs$ e.$Index::Tail$ > ;
c 	( $ADT::__StructureBrackets$ e.$Index::Series$ ) =
c 		( $ADT::__StructureBrackets$ e.$Index::Series$ ) ;
c 	=
c 		;
c }

b Local::MOrder::MergePairs
c $Local::MOrder::MergePairs$ {
c 	( $ADT::__StructureBrackets$ e.$Index::Series$ ) =
c 		e.$Index::Series$ ;
c 	e.$Index::Series$ =
c 		<$Local::MOrder::MergePairs$ <$Local::MOrder::MergeAdjacentPairs$ e.$Index::Series$ > > ;
c }

b Local::MOrder::CreateSeries
c $Local::MOrder::CreateSeries$ {
c 	t.$Index::Elem$ e.$Index::Tail$ =
c 		( $ADT::__StructureBrackets$ t.$Index::Elem$ ) <$Local::MOrder::CreateSeries$ e.$Index::Tail$ > ;
c 	=
c 		;
c }

b Entry::MOrder::Sort
c $Entry::MOrder::Sort$ {
c 	e.$Index::Sequence$ =
c 		<$Local::MOrder::MergePairs$ <$Local::MOrder::CreateSeries$ e.$Index::Sequence$ > > ;
c }

b Local::MOrder::Lexicon
c $Local::MOrder::Lexicon$ {
c 	( $ADT::__StructureBrackets$ t.$Index::First$ e.$Index::Expr1$ ) ( $ADT::__StructureBrackets$ t.$Index::First$ e.$Index::Expr2$ ) =
c 		<$Local::MOrder::Lexicon$ ( $ADT::__StructureBrackets$ e.$Index::Expr1$ ) ( $ADT::__StructureBrackets$ e.$Index::Expr2$ ) > ;
c 	( $ADT::__StructureBrackets$ t.$Index::First1$ e.$Index::Expr1$ ) ( $ADT::__StructureBrackets$ t.$Index::First2$ e.$Index::Expr2$ ) =
c 		<$Entry::MOrder::Compare$ t.$Index::First1$ t.$Index::First2$ > ;
c 	( $ADT::__StructureBrackets$ ) ( $ADT::__StructureBrackets$ t.$Index::First2$ e.$Index::Expr2$ ) =
c 		'<' ;
c 	( $ADT::__StructureBrackets$ t.$Index::First1$ e.$Index::Expr1$ ) ( $ADT::__StructureBrackets$ ) =
c 		'>' ;
c 	( $ADT::__StructureBrackets$ ) ( $ADT::__StructureBrackets$ ) =
c 		'=' ;
c }

b Local::MOrder::SwSymbCompare
c $Local::MOrder::SwSymbCompare$ {
c 	( $ADT::__StructureBrackets$ $Ident::Char$ s.$Index::Chr1$ s.$Index::Ord1$ ) ( $ADT::__StructureBrackets$ $Ident::Char$ s.$Index::Chr2$ s.$Index::Ord2$ ) =
c 		<$Entry::Math::Compare$ s.$Index::Ord1$ s.$Index::Ord2$ > ;
c 	( $ADT::__StructureBrackets$ $Ident::Macro$ s.$Index::Num1$ ) ( $ADT::__StructureBrackets$ $Ident::Macro$ s.$Index::Num2$ ) =
c 		<$Entry::Math::Compare$ s.$Index::Num1$ s.$Index::Num2$ > ;
c 	( $ADT::__StructureBrackets$ $Ident::Other$ s.$Index::Symb1$ ) ( $ADT::__StructureBrackets$ $Ident::Other$ s.$Index::Symb2$ ) =
c 		'=' ;
c 	( $ADT::__StructureBrackets$ $Ident::Macro$ s.$Index::Val$ ) t.$Index::Other$ =
c 		'>' ;
c 	t.$Index::Other$ ( $ADT::__StructureBrackets$ $Ident::Macro$ s.$Index::Val$ ) =
c 		'<' ;
c 	( $ADT::__StructureBrackets$ $Ident::Char$ s.$Index::Chr$ s.$Index::Ord$ ) t.$Index::Other$ =
c 		'>' ;
c 	t.$Index::Other$ ( $ADT::__StructureBrackets$ $Ident::Char$ s.$Index::Chr$ s.$Index::Ord$ ) =
c 		'<' ;
c }

b Local::MOrder::CheckMacro
c $Local::MOrder::CheckMacro$ {
c 	s.$Index::Symb$ s.$Index::Symb$ =
c 		( $ADT::__StructureBrackets$ $Ident::Other$ s.$Index::Symb$ ) ;
c 	s.$Index::Symb$ s.$Index::Value$ =
c 		( $ADT::__StructureBrackets$ $Ident::Macro$ s.$Index::Symb$ ) ;
c }

b Local::MOrder::CheckChar
c $Local::MOrder::CheckChar$ {
c 	s.$Index::Symb$ s.$Index::Symb$ =
c 		<$Local::MOrder::CheckMacro$ s.$Index::Symb$ <$Entry::MRefalRTS::Chr$ s.$Index::Symb$ > > ;
c 	s.$Index::Symb$ s.$Index::Numb$ =
c 		( $ADT::__StructureBrackets$ $Ident::Char$ s.$Index::Symb$ s.$Index::Numb$ ) ;
c }

b Local::MOrder::Type-T
c $Local::MOrder::Type-T$ {
c 	s.$Index::Symb$ =
c 		<$Local::MOrder::CheckChar$ s.$Index::Symb$ <$Entry::MRefalRTS::Ord$ s.$Index::Symb$ > > ;
c }

b Local::MOrder::SymbCompare
c $Local::MOrder::SymbCompare$ {
c 	s.$Index::Left$ s.$Index::Right$ =
c 		<$Local::MOrder::SwSymbCompare$ <$Local::MOrder::Type-T$ s.$Index::Left$ > <$Local::MOrder::Type-T$ s.$Index::Right$ > > ;
c }

b Entry::MOrder::Compare
c $Entry::MOrder::Compare$ {
c 	t.$Index::Val$ t.$Index::Val$ =
c 		'=' ;
c 	s.$Index::Left$ s.$Index::Right$ =
c 		<$Local::MOrder::SymbCompare$ s.$Index::Left$ s.$Index::Right$ > ;
c 	( $ADT::__StructureBrackets$ e.$Index::Left$ ) s.$Index::Right$ =
c 		'>' ;
c 	s.$Index::Left$ ( $ADT::__StructureBrackets$ e.$Index::Right$ ) =
c 		'<' ;
c 	( $ADT::__StructureBrackets$ e.$Index::Left$ ) ( $ADT::__StructureBrackets$ e.$Index::Right$ ) =
c 		<$Local::MOrder::Lexicon$ ( $ADT::__StructureBrackets$ e.$Index::Left$ ) ( $ADT::__StructureBrackets$ e.$Index::Right$ ) > ;
c }

b Entry::MOrder::Compare-T
c $Entry::MOrder::Compare-T$ {
c 	t.$Index::Left$ t.$Index::Right$ =
c 		<$Entry::MOrder::Compare$ t.$Index::Left$ t.$Index::Right$ > t.$Index::Left$ t.$Index::Right$ ;
c }

b Local::MOrder::FnPtr
c $Local::MOrder::FnPtr$ {
c 	$Ident::Compare-T$ =
c 		$Entry::MOrder::Compare-T$ ;
c 	$Ident::Compare$ =
c 		$Entry::MOrder::Compare$ ;
c 	$Ident::SymbCompare$ =
c 		$Local::MOrder::SymbCompare$ ;
c 	$Ident::Type-T$ =
c 		$Local::MOrder::Type-T$ ;
c 	$Ident::CheckChar$ =
c 		$Local::MOrder::CheckChar$ ;
c 	$Ident::CheckMacro$ =
c 		$Local::MOrder::CheckMacro$ ;
c 	$Ident::SwSymbCompare$ =
c 		$Local::MOrder::SwSymbCompare$ ;
c 	$Ident::Lexicon$ =
c 		$Local::MOrder::Lexicon$ ;
c 	$Ident::Sort$ =
c 		$Entry::MOrder::Sort$ ;
c 	$Ident::CreateSeries$ =
c 		$Local::MOrder::CreateSeries$ ;
c 	$Ident::MergePairs$ =
c 		$Local::MOrder::MergePairs$ ;
c 	$Ident::MergeAdjacentPairs$ =
c 		$Local::MOrder::MergeAdjacentPairs$ ;
c 	$Ident::Merge$ =
c 		$Local::MOrder::Merge$ ;
c 	$Ident::SwMerge$ =
c 		$Local::MOrder::SwMerge$ ;
c 	$Ident::FnPtr$ =
c 		$Local::MOrder::FnPtr$ ;
c 	$Ident::MRefalRTS$ $Ident::Prout$ =
c 		$Entry::MRefalRTS::Prout$ ;
c 	$Ident::MRefalRTS$ $Ident::Print$ =
c 		$Entry::MRefalRTS::Print$ ;
c 	$Ident::MRefalRTS$ $Ident::Card$ =
c 		$Entry::MRefalRTS::Card$ ;
c 	$Ident::MRefalRTS$ $Ident::Open$ =
c 		$Entry::MRefalRTS::Open$ ;
c 	$Ident::MRefalRTS$ $Ident::Get$ =
c 		$Entry::MRefalRTS::Get$ ;
c 	$Ident::MRefalRTS$ $Ident::Put$ =
c 		$Entry::MRefalRTS::Put$ ;
c 	$Ident::MRefalRTS$ $Ident::Putout$ =
c 		$Entry::MRefalRTS::Putout$ ;
c 	$Ident::MRefalRTS$ $Ident::Arg$ =
c 		$Entry::MRefalRTS::Arg$ ;
c 	$Ident::MRefalRTS$ $Ident::Exit$ =
c 		$Entry::MRefalRTS::Exit$ ;
c 	$Ident::MRefalRTS$ $Ident::ExistFile$ =
c 		$Entry::MRefalRTS::ExistFile$ ;
c 	$Ident::MRefalRTS$ $Ident::ExistFile-T$ =
c 		$Entry::MRefalRTS::ExistFile-T$ ;
c 	$Ident::MRefalRTS$ $Ident::System$ =
c 		$Entry::MRefalRTS::System$ ;
c 	$Ident::MRefalRTS$ $Ident::Env$ =
c 		$Entry::MRefalRTS::Env$ ;
c 	$Ident::MRefalRTS$ $Ident::Upper$ =
c 		$Entry::MRefalRTS::Upper$ ;
c 	$Ident::MRefalRTS$ $Ident::Lower$ =
c 		$Entry::MRefalRTS::Lower$ ;
c 	$Ident::MRefalRTS$ $Ident::Lenw$ =
c 		$Entry::MRefalRTS::Lenw$ ;
c 	$Ident::MRefalRTS$ $Ident::Numb$ =
c 		$Entry::MRefalRTS::Numb$ ;
c 	$Ident::MRefalRTS$ $Ident::Symb$ =
c 		$Entry::MRefalRTS::Symb$ ;
c 	$Ident::MRefalRTS$ $Ident::Ord$ =
c 		$Entry::MRefalRTS::Ord$ ;
c 	$Ident::MRefalRTS$ $Ident::Chr$ =
c 		$Entry::MRefalRTS::Chr$ ;
c 	$Ident::MRefalRTS$ $Ident::Add$ =
c 		$Entry::MRefalRTS::Add$ ;
c 	$Ident::MRefalRTS$ $Ident::Sub$ =
c 		$Entry::MRefalRTS::Sub$ ;
c 	$Ident::MRefalRTS$ $Ident::Compare$ =
c 		$Entry::MRefalRTS::Compare$ ;
c 	$Ident::Math$ $Ident::Add$ =
c 		$Entry::Math::Add$ ;
c 	$Ident::Math$ $Ident::Sub$ =
c 		$Entry::Math::Sub$ ;
c 	$Ident::Math$ $Ident::Inc$ =
c 		$Entry::Math::Inc$ ;
c 	$Ident::Math$ $Ident::Dec$ =
c 		$Entry::Math::Dec$ ;
c 	$Ident::Math$ $Ident::Compare$ =
c 		$Entry::Math::Compare$ ;
c 	$Ident::Math$ $Ident::Compare-T$ =
c 		$Entry::Math::Compare-T$ ;
c }

