$PROGRAM Library;

$IMPORT FileIO;
$IMPORT InOut;
$IMPORT Math;
$IMPORT MFileSystem;
$IMPORT MOS;
$IMPORT Str = MStrings;

// Важные перечисления

$ENTRY Success { }
$ENTRY Fails { }
$ENTRY True { }
$ENTRY False { }

// Библиотека функций

$ENTRY Add {
  s.Num1 s.Num2 = <Math::Add s.Num1 s.Num2>;
}

$ENTRY Sub {
  s.Num1 s.Num2 = <Math::Sub s.Num1 s.Num2>;
}

$ENTRY ReadLine {
  = <InOut::ReadLine>;
}

$ENTRY WriteLine {
  e.Line = <InOut::WriteLine e.Line>;
}

$ENTRY FOpen {
  s.Mode e.FileName = <FileIO::Open s.Mode e.FileName>;
}

$ENTRY FClose {
  t.File = <FileIO::NulClose t.File>;
}

$ENTRY FReadLine {
  t.File = <FileIO::ReadLine t.File>;
}

$ENTRY FWriteLine {
  t.File e.Line = <FileIO::WriteLine t.File e.Line>;
}

$ENTRY System {
  e.Command = <MOS::System e.Command>;
}

$ENTRY StrFromInt {
  s.Num = <Str::Symb s.Num>;
}

/**
  <IntFromStr e.Text>
    == Success s.Number e.Tail
    == Fails e.Text
*/
$ENTRY IntFromStr {
  e.Text =
    <IntFromStr--SwFirst ('0123456789') e.Text>;
}

IntFromStr--SwFirst {
  (e.Dig-B s.Next e.Dig-E) s.Next e.Text =
    <DoIntFromStr
      (e.Dig-B s.Next e.Dig-E) (s.Next) e.Text
    >;

  (e.Digits) e.Text = & Fails e.Text;
}

DoIntFromStr {
  (e.Dig-B s.Next e.Dig-E) (e.Scanned) s.Next e.Text =
    <DoIntFromStr
      (e.Dig-B s.Next e.Dig-E) (e.Scanned s.Next) e.Text
    >;

  (e.Digits) (e.Scanned) e.Text =
    & Success
    <First <Str::Numb e.Scanned>>
    e.Text;
}

First s.First e.Tail = s.First;

$ENTRY Exit {
  s.RetCode = <MOS::Exit s.RetCode>;
}

$ENTRY Arg {
  s.ArgNum = <MOS::Arg s.ArgNum>;
}

$ENTRY Ord {
  s.Char = <Str::Ord s.Char>;
}

$ENTRY Chr {
  s.Code = <Str::Chr s.Code>;
}

$ENTRY ExistFile {
  e.FileName = <SwExistFile <MFileSystem::ExistFile e.FileName>>;
}

SwExistFile {
  True = & True;
  False = & False;
}

$END Library.
