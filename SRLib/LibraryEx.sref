
// Расширения библиотеки и функции, реализуемые
// средствами самого Простого Рефала

$ENTRY Map {
  s.Fn t.Next e.Tail = <s.Fn t.Next> <Map s.Fn e.Tail>;

  s.Fn = ;
}

$ENTRY Reduce {
  s.Fn t.Acc t.Next e.Tail =
    <Reduce
      s.Fn <s.Fn t.Acc t.Next> e.Tail
    >;

  s.Fn t.Acc = t.Acc;
}

$EXTERN DoMapReduce;

$ENTRY MapReduce {
  s.Fn t.Acc e.Tail =
    <DoMapReduce s.Fn t.Acc () e.Tail>;
}

$EXTERN MapReduce--AddScanned;

DoMapReduce {
  s.Fn t.Acc (e.Scanned) t.Next e.Tail =
    <DoMapReduce
      s.Fn
      <MapReduce--AddScanned
        <s.Fn t.Acc t.Next> (e.Scanned)
      >
      e.Tail
    >;

  s.Fn t.Acc (e.Scanned) = t.Acc e.Scanned;
}

MapReduce--AddScanned {
  t.Acc e.StepScanned (e.Scanned) =
    t.Acc (e.Scanned e.StepScanned);
}

$ENTRY UnBracket {
  (e.Expr) = e.Expr;
}

$ENTRY DelAccummulator {
  t.Acc e.Tail = e.Tail;
}

//FROM Library
$EXTERN FOpen, FClose, FReadLine, FWriteLine;

$EXTERN DoLoadFile;

$ENTRY LoadFile {
  e.FileName =
    <DoLoadFile
      <FReadLine <FOpen 'r' e.FileName>>
    >;
}

DoLoadFile {
  t.File 0 = <FClose t.File>;

  t.File e.Line 0 = (e.Line) <FClose t.File>;

  t.File e.Line =
    (e.Line)
    <DoLoadFile
      <FReadLine t.File>
    >;
}

$EXTERN WriteBracketLine;

$ENTRY SaveFile {
  (e.FileName) e.Lines =
    <FClose
      <Reduce
        WriteBracketLine
        <FOpen 'w' e.FileName>
        e.Lines
      >
    >;
}

WriteBracketLine {
  t.File (e.Line) = <FWriteLine t.File e.Line>;
}

//FROM Library
$EXTERN Add, Sub;

$ENTRY Inc {
  s.Num = <Add s.Num 1>;
}

$ENTRY Dec {
  s.Num = <Sub s.Num 1>;
}

//FROM Library
$EXTERN IntFromStr, Success, Fails;

FastIntFromStr-Guard {
  Success s.Number = s.Number;
}

$ENTRY FastIntFromStr {
  e.Digits =
    <FastIntFromStr-Guard
      <IntFromStr e.Digits>
    >;
}

//FROM Library
$EXTERN Arg;

$EXTERN DoArgList;

$ENTRY ArgList {
  = <DoArgList 0>;
}

$EXTERN SwDoArgList;

DoArgList {
  s.Next = <SwDoArgList <Inc s.Next> <Arg s.Next>>;
}

SwDoArgList {
  s.Next = ;

  s.Next e.Arg = (e.Arg) <DoArgList s.Next>;
}


