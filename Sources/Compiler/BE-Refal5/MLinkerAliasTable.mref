$MODULE BE-Refal5::MLinkerAliasTable;

$IMPORT MFileIO;
$IMPORT MOrder;
$IMPORT MStrings;

/*------------------------------------------------------------------------------
 Таблица псевдонимов для замены имён функций и индексов переменных на более
 короткие (для индексов переменных это не особо актуально, а вот для имён
 функций необходимо, т.к. Рефал-5 не переваривает строки длиннее 260 символов,
 а квалифицированные имена функций достаточно длинны).
 Формат таблицы псевдонимов
   [AliasTable (e.Nums) (e.Name(e.Alias))* ]
  e.Nums -- номера, преписываемые следующему псевдониму,
    e.Nums := (s.Categ e.Num)*
  e.Name -- оригинальное имя (типа 'NextToken' или '.Context')
  e.Alias -- псевдоним
------------------------------------------------------------------------------*/

$DATA AliasTable;

$ENTRY Create {
  = [AliasTable () ];
}

/**
  <Lookup t.AliasTable e.Name s.Hash> == t.AliasTable e.Alias
*/
$ENTRY Lookup {
  [AliasTable
    t.Num
    e.HashGroup-B
    (s.Hash e.Aliases-B (e.Name (e.Alias)) e.Aliases-E)
    e.HashGroup-E
  ]
  e.Name s.Hash =
    [AliasTable
      t.Num
      (s.Hash (e.Name (e.Alias)) e.Aliases-B e.Aliases-E)
      e.HashGroup-B e.HashGroup-E
    ]
    e.Alias;

  [AliasTable t.Num e.HashGroups]
  e.Name s.Hash =
    <Lookup-Hashed-AddNew
      <NewAlias t.Num e.Name> s.Hash e.HashGroups
    >;
}

Lookup-Hashed-AddNew {
  t.Num (e.Name) (e.Alias) s.Hash
  e.HashGroup-B (s.Hash e.Aliases) e.HashGroup-E =
    <Lookup
      [AliasTable
        t.Num
        (s.Hash (e.Name (e.Alias)) e.Aliases) e.HashGroup-B e.HashGroup-E
      ]
      e.Name s.Hash
    >;

  t.Num (e.Name) (e.Alias) s.Hash e.HashGroups =
    <Lookup
      [AliasTable t.Num (s.Hash (e.Name (e.Alias))) e.HashGroups]
      e.Name s.Hash
    >;
}

/**
  <AddBuiltIn t.AliasTable (e.MRefalName s.Hash) e.Refal5Name>
    == t.AliasTable
*/
$ENTRY AddBuiltIn {
  [AliasTable
    t.Num
    e.HashGroup-B (s.Hash e.Aliases) e.HashGroup-E
  ]
  (e.Name s.Hash) e.RealName =
    [AliasTable
      t.Num
      (s.Hash e.Aliases (e.Name (e.RealName)))
      e.HashGroup-B e.HashGroup-E
    ];

  [AliasTable t.Num e.HashGroups] (e.Name s.Hash) e.RealName =
    [AliasTable
      t.Num (s.Hash (e.Name (e.RealName))) e.HashGroups
    ];
}

CategChar {
  'Index' = 'i'; 'Local' = 'L'; 'Entry' = 'E';
  'Swap' = 'S'; 'Ident' = 'W'; 'ADT' = 'T';
}

NewAlias {
  /* Все */
  t.Num e.CategStr '::' e.Name =
    <NewAliasAux
      <CategChar e.CategStr>
      t.Num e.CategStr '::' e.Name
    >;
}

NewAliasAux
  s.CategChar t.Num e.NameInRout =
    <NewAliasAuxWithNumber
      s.CategChar
      <IncCateg t.Num s.CategChar>
      (e.NameInRout)
    >;

NewAliasAuxWithNumber
  s.CategChar t.Num e.AliasNumber (e.NameInRout) =
    t.Num (e.NameInRout) (s.CategChar e.AliasNumber);

// <IncCateg t.Num s.Categ> == t.UpdatedNum s.CatNumber
IncCateg {
  (e.Nums-B (s.Categ e.Num) e.Nums-E) s.Categ =
    ((s.Categ <IncStringIndex e.Num>) e.Nums-B e.Nums-E) e.Num;

  (e.Nums) s.Categ =
    <IncCateg ((s.Categ) e.Nums) s.Categ>;
}

IncStringIndex
  e.Num =
    <IncStringIndexAux
      (e.Num) <CharDigitsSeq>
    >;

CharDigitsSeq =
  '0123456789'
  'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  //'abcdefghijklmnopqrstuvwxyz'
  ;

IncStringIndexAux {
  (s.Last) s.Zero s.First e.Seq s.Last =
    s.First s.Zero;

  (e.Num s.Last) s.Zero e.Seq s.Last =
    <IncStringIndexAux
      (e.Num) s.Zero e.Seq s.Last
    > s.Zero;

  (e.Num s.Last) e.Seq-B s.Last s.Next e.Seq-E =
    e.Num s.Next;

  () s.First e.Seq-E = s.First;
}

$ENTRY OutAliases-D {
  [AliasTable t.Num e.Aliases] e.TargetFileName =
    <UserTypeAliases
      <MFileIO::Open 'w' e.TargetFileName '-Aliases.txt'>
      <SortAliases e.Aliases>
    >;
}

SortAliases
  e.HashGroups =
    <MOrder::Sort <Code e.HashGroups>>;

Code {
  (s.Hash e.Items) e.HashGroups =
    <Code-HashGroup e.Items> <Code e.HashGroups>;

  /* пусто */ = /* всё */;
}

Code-HashGroup {
  //Пропускаем индексы переменных.
  ('Index::' e.Name ('i' e.Index)) e.Items =
    <Code-HashGroup e.Items>;

  (e.Name (s.Categ e.Index)) e.Items =
    (s.Categ <Length-T e.Index> (e.Name))
    <Code-HashGroup e.Items>;

  /* пусто */ = /* всё */;
}

Length-T {
  s.1 = 1 s.1;
  s.1 s.2 = 2 s.1 s.2;
  s.1 s.2 s.3 = 3 s.1 s.2 s.3;
  e.Index = <MStrings::Length-T e.Index>;
}

UserTypeAliases {
  t.FAli (s.CategChar s.Length e.Alias (e.CategStr '::' e.Name)) e.Tail =
    <UserTypeAliases
      <MFileIO::WriteLine t.FAli s.CategChar e.Alias ' --> ' e.Name>
      e.Tail
    >;

  t.FAli =
    <MFileIO::Close t.FAli>;
}

$END BE-Refal5::MLinkerAliasTable.
