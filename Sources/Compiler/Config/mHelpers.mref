$MODULE Config::MHelpers;

$IMPORT MLambda;

$ENTRY TuneEndConfig = ();

/**
  <GenExtent s.FnExtentDescription>
    == s.FnExtent

  <s.FnExtentDescription>
    == (s.OptionId (e.OptionName) e.DefaultValue)
*/
$ENTRY GenExtent
  s.FnExtentDescription =
    (
      & TuneEndConfig
      <MLambda::Map
        & GenExtentEntry <s.FnExtentDescription>
      >
    );

GenExtentEntry
  (s.OptionId (e.OptionName) e.DefaultValue) =
    ((Param (e.OptionName))
      <MLambda::BindLeft & Handler s.OptionId (e.OptionName)>
      (Optional)
      OneTime
    );

Handler
  s.OptionName (e.OptionText)
  t.hErrorList (e.TunerConfig) t.SrcPos (e.CompilerCmdLine) NoGroup =
    t.hErrorList
    (e.TunerConfig (s.OptionName (e.OptionText) t.SrcPos e.CompilerCmdLine));

/**
  <InitConfig s.FnExtentDescription e.Tunings>
    == (e.Config)
*/
$ENTRY InitConfig
  s.FnDescription e.Tunings =
    (
      <MLambda::Map
        <MLambda::BindLeft & InitTuning e.Tunings>
        <s.FnDescription>
      >
    );

InitTuning
  e.Tunings (s.OptionId (e.OptionName) e.Default) =
    (<GetTuning s.OptionId e.Tunings (e.Default)>);
    
/*
  <GetTuning s.Tuning e.TunerList (e.Default)>
    == e.TunerValue
*/
GetTuning
  s.Tuning e.Tunings (e.Default) =
    <GetTuning-Aux
      s.Tuning
      e.Tunings (s.Tuning ('default') Default e.Default)
    >;

GetTuning-Aux
  s.Tuning e.Tunings-B (s.Tuning (e.Name) t.SrcPos e.Value) e.Tunigs-E =
    s.Tuning e.Value;

/*
  <ConfigExtract t.Config s.Option>
    == e.Value
*/
$ENTRY ConfigExtract
  (e.Config-B (s.Option e.Value) e.Config-E) s.Option = e.Value;

$END Config::MHelpers.
