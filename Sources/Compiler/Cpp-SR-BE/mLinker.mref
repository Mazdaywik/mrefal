$MODULE Cpp-SR-BE::MLinker;

$IMPORT FileIO;
$IMPORT Math;
$IMPORT MFileSystem;
$IMPORT MLambda;
$IMPORT MOS;
$IMPORT MStrings;

/**
  <Link t.L-Config (e.ProgName) (t.ModuleName e.OutName)>
    == Success
    == Fails
*/
$ENTRY Link
  t.L-Config (e.ProgName) e.Modules =
    Success
    <FileIO::Save
      ('call_cpp.tmp.bat')
      ('@echo off')
      <GenCommands
        t.L-Config
        (e.ProgName)
        <EliminateCollisions t.L-Config e.Modules>
      >
      ('del *.obj')
      ('rem del call_cpp.tmp.bat')
    >
    <MOS::System 'call_cpp.tmp.bat'>;

ConfigExtract
  (e.Config-B (s.Option e.Value) e.Config-E) s.Option = e.Value;

EliminateCollisions
  t.Config e.Modules =
    <DoEliminateCollisions
      () () <MLambda::Map & PrepareName e.Modules>
      ('Library' (<ConfigExtract t.Config RunTimeDir> '\\Library.cpp'))
      ('refalrts' (<ConfigExtract t.Config RunTimeDir> '\\refalrts.cpp'))
    >;


PrepareName
  (t.ModuleName e.StrFileName) =
    <PrepareName-Aux
      (e.StrFileName)
      <MFileSystem::PathFromStr e.StrFileName>
    >;

PrepareName-Aux
  (e.StrFileName) e.PtFolder (e.File '.cpp') =
    (e.File (e.StrFileName));

DoEliminateCollisions {
  (e.Names-B (e.File s.Num) e.Names-E)
  (e.Scanned) (e.File (e.Path)) e.Tail =
    <DoEliminateCollisions
      (e.Names-B (e.File <Math::Inc s.Num>) e.Names-E)
      (e.Scanned
        (Rename (e.Path) (<AddNumber e.Path s.Num>))
      )
      e.Tail
    >;

  (e.Names) (e.Scanned) (e.File (e.Path)) e.Tail =
    <DoEliminateCollisions
      (e.Names (e.File 1)) (e.Scanned (NoRename e.Path)) e.Tail
    >;

  (e.Names) (e.Scanned) = e.Scanned;
}

AddNumber {
  e.Path '.cpp' s.Number = e.Path '@' <MStrings::Symb s.Number> '.cpp';
}

GenCommands {
  t.Config (e.ProgName) e.Commands =
    <MLambda::Map & GenFwdRename e.Commands>
    (
      <CompilerCmdLine t.Config>
      '-o' e.ProgName '.cpp.exe '
      <MLambda::Map & GenFilename e.Commands>
      // '>nul'
    )
    <MLambda::Map & GenRevRename e.Commands>;
}

CompilerCmdLine
  t.Config =
    <ConfigExtract t.Config CCompiler>
    ' -I\"' <ConfigExtract t.Config RunTimeDir> '" ';

GenFwdRename {
  (Rename (e.Name) (e.NewName)) =
    ('copy \"' e.Name '\" \"' e.NewName '\">nul');

  (NoRename e.Path) = ;
}

FileName {
  e.StrPath = <FileName-Aux <MFileSystem::PathFromStr e.StrPath>>;
}

FileName-Aux {
  e.PtBegin (e.FileName) = e.FileName;
}

GenFilename {
  (Rename (e.Name) (e.NewName)) = '\"' e.NewName '\" ';

  (NoRename e.Path) = '\"' e.Path '\" ';
}

GenRevRename {
  (Rename (e.Name) (e.NewName)) =
    ('del \"' e.NewName '\"');

  (NoRename e.Name) = ;
}

$END Cpp-SR-BE::MLinker.
