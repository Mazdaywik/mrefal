$MODULE Driver::MSymModule;

/**
  Модуль инкапсулирует работу с файлами межмодульной информации: загрузку
  данных из них и очистку t.hIModule от данных реализации.
*/

$IMPORT Driver::MContext;
$IMPORT FE-MRefal::MParser_Sym;
$IMPORT MIModule;
$IMPORT MLambda;
$IMPORT MQualifiedName;

/*------------------------------------------------------------------------------
  Загрузка символической информации
------------------------------------------------------------------------------*/

/**
  <LoadInfo t.Context t.hErrorList t.ModuleName>
    == t.Context t.hErrorList Success s.Errors t.hIModule
    == t.Context t.hErrorList Fails
  t.ModuleName ::= t.QualifiedName
  s.Errors ::= Success | Warnings
*/
$ENTRY LoadInfo
  t.hContext t.hErrorList t.ModuleName =
    <LoadInfo-SwBroken
      <LoadInfo-SaveBroken t.hContext t.hErrorList t.ModuleName>
    >;

LoadInfo-SwBroken {
  t.hContext t.hErrorList Success Errors t.hIModule =
    t.hContext t.hErrorList Fails
    <MIModule::Destroy t.hIModule>;

  t.hContext t.hErrorList Success s.Error t.hIModule =
    t.hContext t.hErrorList Success s.Error t.hIModule;

  t.hContext t.hErrorList Fails =
    t.hContext t.hErrorList Fails;
}

/**
  <LoadInfo-SaveBroken t.Context t.hErrorList t.ModuleName>
    == t.Context t.hErrorList Success s.Errors t.hIModule
    == t.Context t.hErrorList Fails
  t.ModuleName ::= t.QualifiedName
  s.Errors ::= Success | Warnings | Errors
*/
$ENTRY LoadInfo-SaveBroken
  t.hContext t.hErrorList t.ModuleName =
    <LoadInfo-SwGetName
      t.ModuleName t.hErrorList
      <Driver::MContext::GetBackEnd t.hContext t.ModuleName BE-ModuleIF>
    >;

LoadInfo-SwGetName {
  t.ModuleName t.hErrorList t.hContext Success e.FilePath =
    t.hContext
    <FE-MRefal::MParser_Sym::SymModule
      t.hErrorList t.ModuleName e.FilePath
    >;

  t.ModuleName t.hErrorList t.hContext Fails s.Reason =
    <MQualifiedName::Destroy t.ModuleName>
    t.hContext t.hErrorList Fails;
}

$END Driver::MSymModule.
