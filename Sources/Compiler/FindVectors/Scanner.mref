$MODULE FindVectors::Scanner;

$IMPORT InOut;
$IMPORT FileIO;
$IMPORT MLambda;
$IMPORT MStrings;

$ENTRY ScanFile
  e.FileName =
    <FindVectors
      <Prescan <FileIO::Load e.FileName>>
    >;

Prescan {
  e.File =
    //<InOut::WriteLine 'Scan ' e.File>
    <UnComment
      <MLambda::Map
        <MLambda::Composite
          & MLambda.UnBracket
          <MLambda::BindRight & MLambda.Identity '\n'>
        >
        e.File
      >
    >;
}

UnComment {
  '/*' e.Comment '*/' e.Tail = ' ' <UnComment e.Tail>;

  '//' e.Comment '\n' e.Tail = ' ' <UnComment e.Tail>;

  '\n' e.Tail = ' ' <UnComment e.Tail>;

  s.Other e.Tail = s.Other <UnComment e.Tail>;

  = ;
}

FindVectors
  e.Text = <DoFindVectors (('UnknownClass') ('UnknownFunction')) e.Text>;

DoFindVectors {
  ((e.Class) (e.Function) e.Uses)
  ' ' e.NextClass '::' e.NextFunction '(' e.Tail =
    ((e.Class) (e.Function) e.Uses)
    <DoFindVectors
      ((e.NextClass) (e.NextFunction))
      e.Tail
    >;

  ((e.Class) (e.Function) e.Uses)
  'm_pYYYY->p' e.UsedClassTail =
    <DoFindVectors-UsedClass
      ((e.Class) (e.Function) e.Uses)
      ('p') e.UsedClassTail
    >;

  ((e.Class) (e.Function) e.Uses) s.First e.Tail =
    <DoFindVectors ((e.Class) (e.Function) e.Uses) e.Tail>;

  ((e.Class) (e.Function) e.Uses) = ((e.Class) (e.Function) e.Uses);
}

DoFindVectors-UsedClass {
  ((e.Class) (e.Function) e.Uses)
  (e.Scanned) ' ' e.Tail =
    <DoFindVectors ((e.Class) (e.Function) e.Uses (e.Scanned)) e.Tail>;

  ((e.Class) (e.Function) e.Uses)
  (e.Scanned) '->' e.Tail =
    <DoFindVectors ((e.Class) (e.Function) e.Uses (e.Scanned)) e.Tail>;

  ((e.Class) (e.Function) e.Uses)
  (e.Scanned) ';' e.Tail =
    <DoFindVectors ((e.Class) (e.Function) e.Uses (e.Scanned)) e.Tail>;

  ((e.Class) (e.Function) e.Uses)
  (e.Scanned) s.Next e.Tail =
    <DoFindVectors-UsedClass
      ((e.Class) (e.Function) e.Uses)
      (e.Scanned s.Next) e.Tail
    >;

  ((e.Class) (e.Function) e.Uses) (e.Scanned) =
    ((e.Class) (e.Function) e.Uses (e.Scanned));
}

$END FindVectors::Scanner.
