$MODULE MConfig;

$IMPORT MBE-Mgr;

$DATA Config;

/**
  <Create e.ModulePath>
    == t.Config
  e.ModulePath = (e.PathToFolder)*
*/
$ENTRY Create
  e.ModulePath =
    [Config (ModulePath e.ModulePath)];

/**
  <GetModulePath t.Config> == e.ModulePath
*/
$ENTRY GetModulePath
  [Config e.Opt-B (ModulePath e.ModulePath) e.Opt-E] =
    e.ModulePath;


/*
Module MBE-Mgr;
=============================================================================
Параметры конкретного диспетчера:
  s.Name ::= IDENTIFIER -- имя диспетчера
  s.FnGenerator ::= { t.IModule e.FileName = t.IModule }
  <s.FnLinker t.hContext (e.OutName) (t.ModuleName e.ObjName)*>
    == t.hContext Success
    == t.hContext Fails
  e.Folder -- имя папки
  e.Ext -- расширение файла
==============================================================================
*/

/**
  <Generate t.Config t.hContext t.hIModule t.ModuleName>
    == t.hContext t.hIModule Success
    == t.hContext t.hIModule Fails
*/
$ENTRY Generate
  [Config e.Options] t.hContext t.hIModule t.ModuleName =
    <MBE-Mgr::Generate_ t.hContext t.hIModule t.ModuleName>;

/**
  <Link t.Config t.hContext (e.OutName) e.OrderedFiles>
    == t.hContext Success
    == t.hContext Fails
  e.OrderedFiles ::= t.ModuleName*
*/
$ENTRY Link
  [Config e.Options] t.hContext (e.OutName) e.OrderedFiles =
    <MBE-Mgr::Link_ t.hContext (e.OutName) e.OrderedFiles>;


/**
  <RegisterBackEnd
    t.Config s.Name t.FnGenerator t.FnLinker (e.Folder) (e.Ext)
  >
    == t.Config
*/

/**
  <GetBackEndList t.Config> == e.BackEndName
*/
$ENTRY GetBackEndList
  [Config e.Options] = <MBE-Mgr::GetList_>;

/**
  <GetOption t.Config s.BEName s.Option>
    == Success e.Option
    == Fails InvalidMgr
    == Fails InvalidOption
*/

/**
  <GetPath-T s.BEName t.ModuleName e.BaseFolder>
    == Success e.OutPath
    == Fails
*/

/*
Module MFE-Mgr;
=============================================================================
Опции front-end-диспетчера:

s.FEName ::= IDENTIFIER -- Имя
s.FnParser ::= {
  t.ErrorList t.QualifiedName e.FileName =
    t.ErrorList Success s.Result t.IModule;

  t.ErrorList t.QualifiedName e.FileName =
    t.ErrorList Fails;
}
s.Result ::= Success | Warnings | Errors
e.Ext -- Расширение файлов исходного текста
  Функция s.FnParser может предполагать, что файл с заданным именем
существует.
==============================================================================

<Load s.FEName t.hErrorList t.ModuleName e.PathToFile>
  == t.ErrorList Success s.Result t.IModule
  == t.ErrorList Fails
s.Result ::= Success | Warnings | Errors
*/

/**
  <RegisterFrontEnd
    t.Config s.Name t.FnParser (e.Ext)
  >
    == t.Config
*/

/**
  <GetPath-T t.Config t.ModuleName e.BaseFolder>
    == Success e.FilePath
    == Fails
*/

/**
  <GetFrontEndList t.Config> == e.FrontEndNames
*/

/**
  <GetFrontEndExt t.Config s.FrontEnd> == e.Ext
*/



$END MConfig.
