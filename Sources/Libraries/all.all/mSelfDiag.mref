$MODULE MSelfDiag;

$IMPORT Core = CoreBE::MSelfDiag;

//------------------------------------------------------------------------------

$ENTRY Error
  e.Message =
    <Core::PrintMessage 'INTERNAL ERROR: ' e.Message>
    <Log 'INTERNAL ERROR: ' e.Message>
    <Core::ExitFailure>;

$ENTRY FailDown { }

//------------------------------------------------------------------------------

$ENTRY Log
  e.Message = <Core::Log e.Message>;

$ENTRY Log-T
  e.Message = <Core::Log-T e.Message>;

//------------------------------------------------------------------------------

$ENTRY Final = <Core::CloseLog>;

//------------------------------------------------------------------------------

AssertAux {
  t.ResultAndExpected t.ResultAndExpected =
    ('=') t.ResultAndExpected t.ResultAndExpected;

  t.Result t.Expected = ('!=') t.Result t.Expected;
}

/**
  <Assert-??-T (e.Result) (e.Expected) [e.Message]>
    == e.Result
    fail down

  <Assert-?? (e.Result) (e.Expected) [e.Message]>
    == empty
    fail down
*/
$ENTRY Assert-Eq-T
  t.Result t.Expected e.Message =
    <SwAssert ('=') <AssertAux t.Result t.Expected> e.Message>;

$ENTRY Assert-NE-T
  t.Result t.Expected e.Message =
    <SwAssert ('!=') <AssertAux t.Result t.Expected> e.Message>;

$ENTRY Assert-Eq
  t.Result t.Expected e.Message =
    <Nil <Assert-Eq-T t.Result t.Expected e.Message>>;

$ENTRY Assert-NE
  t.Result t.Expected e.Message =
    <Nil <Assert-NE-T t.Result t.Expected e.Message>>;

SwAssert {
  t.Sign t.Sign (e.Result) t.Expected e.Message =
    e.Result;

  t.SignExpected t.SignFact t.Result t.Expected e.Message =
    <PrintAssert
      t.SignFact t.Result t.Expected e.Message
    >;
}

PrintAssert {
  (e.SignFact) t.Result t.Expected =
    <Error 'ASSERT VIOLATION: ' t.Result ' ' e.SignFact ' ' t.Expected>;

  (e.SignFact) t.Result t.Expected e.Message =
    <Error
      'ASSERT VIOLATION: '
      t.Result ' ' e.SignFact ' ' t.Expected
      '(' e.Message ')'
    >;
}

Nil e.X = ;

$END MSelfDiag.
