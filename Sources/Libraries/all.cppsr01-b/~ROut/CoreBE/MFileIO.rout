v ROUT3 Module Refal 0.1

b Entry::CoreBE::MFileIO::Open
c $Entry::CoreBE::MFileIO::Open$ {
c   'b' s.Mode e.FileName
c     , 'rwa'
c       : e.X s.Mode e.Y
c     , <$Local::CoreBE::MFileIO::Open-CheckHandles$ >
c       :
c     , <Dg FreeHandles > :
c     {
r       //Найден свободный дескриптор
c       Handles s.FreeHandle e.Handles
c         = <Open <Implode s.Mode 'b'> s.FreeHandle e.FileName >
c         <Br FreeHandles '=' Handles e.Handles >
c         s.FreeHandle;
r 
r       //Свободных дескрипторов не осталось --- функция должна падать
c     };
r 
c   s.Mode e.FileName
c     , 'rwa'
c       : e.X s.Mode e.Y
c     , <$Local::CoreBE::MFileIO::Open-CheckHandles$ >
c       :
c     , <Dg FreeHandles > :
c     {
r       //Найден свободный дескриптор
c       Handles s.FreeHandle e.Handles
c         = <Open s.Mode s.FreeHandle e.FileName >
c         <Br FreeHandles '=' Handles e.Handles >
c         s.FreeHandle;
r 
r       //Свободных дескрипторов не осталось --- функция должна падать
c     };
c }

b Local::CoreBE::MFileIO::Open-CheckHandles
c $Local::CoreBE::MFileIO::Open-CheckHandles$ {
c   , <Cp FreeHandles > :
c   {
c     Handles e.Handles = ;
c     = <Br FreeHandles '=' Handles 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 >;
c   }
c }

b Entry::CoreBE::MFileIO::Close
c $Entry::CoreBE::MFileIO::Close$ {
c   s.Handle =
c     <Close s.Handle >
c     <Br FreeHandles '=' <Dg FreeHandles> s.Handle >;
c }

b Entry::CoreBE::MFileIO::ReadLine
c $Entry::CoreBE::MFileIO::ReadLine$ {
c   StdIn = <Card >;
c   s.Handle = <Get s.Handle >;
c }

b Entry::CoreBE::MFileIO::StdIn
c $Entry::CoreBE::MFileIO::StdIn$ {
c   = StdIn ;
c }

b Entry::CoreBE::MFileIO::StdOut
c $Entry::CoreBE::MFileIO::StdOut$ {
c  = StdOut ;
c }

b Entry::CoreBE::MFileIO::Write
c $Entry::CoreBE::MFileIO::Write$ {
c   StdOut e.Text '\n' = <Prout <Dg CachedLine > e.Text >;
c   StdOut e.Text = <Br CachedLine '=' <Dg CachedLine > e.Text >;
c   s.Handle e.Text '\n' = <Putout s.Handle e.Text >;
c   s.Handle e.Text  = <Write s.Handle e.Text >;
c }

b Entry::CoreBE::MFileIO::FlushIO
c $Entry::CoreBE::MFileIO::FlushIO$ {
c   = <Prout <Dg CachedLine > >;
c }

