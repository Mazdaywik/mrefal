$MODULE MSymTable;

/*
  Внутренний формат [SymTable (e.SrcName (e.OutName))*]
*/
$DATA SymTable;

/**
  <Create> == t.SymTable
*/
$ENTRY Create = [SymTable];

/**
  <AddExport t.SymTable (e.Name) e.ModuleName>
    == t.SymTable Success
    == t.SymTable Fails IdentifierRedeclared
*/
$ENTRY AddExport
  t.SymTable (e.Name) e.ModuleName =
    <SwAddDeclaration t.SymTable (e.Name) 'Cpp-SR-BE.' e.ModuleName '.' e.Name>;

SwAddDeclaration {
  [SymTable e.Names-B (e.Name (e.Exported)) e.Names-E]
  (e.Name) e.Exported =
    [SymTable e.Names-B (e.Name (e.Exported)) e.Names-E]
    Success;

  [SymTable e.Names-B (e.Name (e.Exported1)) e.Names-E]
  (e.Name) e.Exported2 =
    [SymTable e.Names-B (e.Name (e.Exported1)) e.Names-E]
    Fails IdentifierRedeclared;

  [SymTable e.Names] (e.Name) e.Exported =
    [SymTable e.Names (e.Name (e.Exported))] Success;
}

/**
  <AddForward t.SymTable e.Name>
    == t.SymTable Success
    == t.SymTable Fails IdentifierRedeclared
*/
$ENTRY AddForward
  t.SymTable e.Name =
    <SwAddDeclaration t.SymTable (e.Name) e.Name>;

/**
  <ConvertName t.SymTable e.Name>
    == t.SymTable Success e.Renamed
    == t.SymTable Fails NoName
*/
$ENTRY ConvertName {
  [SymTable e.Names-B (e.Name (e.Rename)) e.Names-E]
  e.Name =
    [SymTable e.Names-B (e.Name (e.Rename)) e.Names-E]
    Success '& ' e.Rename;

  t.SymTable e.Name =
    t.SymTable Fails NoName;
}

/**
  <Destroy t.SymTable> == empty
*/
$ENTRY Destroy
  [SymTable e.Names] = ;

$END MSymTable.