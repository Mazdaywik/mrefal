$PROGRAM Test;

$IMPORT InOut;
$IMPORT CmdLine::MParser;
$IMPORT MErrorList = MError;
$IMPORT MLambda;
$IMPORT MOS;
$IMPORT MSrcPos;

$ENTRY Go =
  <FinishAnalyzeCmdLine
    <CmdLine::MParser::Parse
      <MErrorList::CreateErrList>
      & TopLevelDescription
      <MOS::ArgList>
    >
  >;

TopLevelDescription =
  (
    & EmptyBrackets
    <MLambda::Map
      & GenDescription 'abcdefghijklmnopqrstuvwxyz'
    >
    (
      (Param (File))
      <MLambda::BindLeft & Handler 'File'>
      (Optional <MLambda::BindLeft & Handler '[File]'>)
      Multiply
      Optional & TopLevelDescription
    )
    (
      (Naked (EOG))
      <MLambda::BindLeft & Handler 'EOG'>
      Required
      OneTime
    )
    //(
    //  (Naked ('YYY'))
    //  <MLambda::BindLeft & Handler 'YYY'>
    //  Required
    //  OneTime
    //)
    //(
    //  (Naked ('ZZZ'))
    //  <MLambda::BindLeft & Handler 'YYY'>
    //  Required
    //  OneTime
    //)
  );

GenDescription
  s.Letter =
    (
      (ParamOpt (s.Letter))
      <MLambda::BindLeft & Handler s.Letter>
      //(Optional <MLambda::BindLeft & Handler '[' s.Letter ']'>)
      (Optional)
      Multiply
      Optional & TopLevelDescription
    );

Handler {
  e.Option t.hErrorList (e.Collected) t.SrcPos NoParam t.Group =
    //<InOut::WriteLine 'Handler ' e.Option ' no param'>
    t.hErrorList
    (e.Collected ((t.SrcPos (e.Option) '-') t.Group));

  e.Option t.hErrorList (e.Collected) t.SrcPos (e.Param) t.Group =
    //<InOut::WriteLine 'Handler ' e.Option ' -> ' e.Param>
    t.hErrorList
    (e.Collected ((t.SrcPos (e.Option) e.Param) t.Group));
}

EmptyBrackets = ();

FinishAnalyzeCmdLine {
  t.ErrorList Success (e.Collected) =
    <MErrorList::PrintErrors t.ErrorList>
    <InOut::WriteLine 'Scan successed'>
    <WriteOptions () e.Collected>;

  t.ErrorList Fails =
    <MErrorList::PrintErrors t.ErrorList>
    <InOut::WriteLine 'Scan failed'>;
}

WriteOptions {
  (e.Indent) = ;

  (e.Indent) ((t.SrcPos (e.Name) e.Param) NoGroup) e.Tail =
    <InOut::WriteLine
      e.Indent '+' e.Name ': ' e.Param ' (no group) '
      <MSrcPos::ToString t.SrcPos> 
    >
    <WriteOptions (e.Indent) e.Tail>;

  (e.Indent) ((t.SrcPos (e.Name) e.Param) (e.Group)) e.Tail =
    <InOut::WriteLine
      e.Indent '+' e.Name ': ' e.Param ' '
      <MSrcPos::ToString t.SrcPos>
    >
    <WriteOptions (e.Indent '  ') e.Group>
    <WriteOptions (e.Indent) e.Tail>;

  (e.Indent) t.OtherTerm e.Tail =
    <InOut::WriteLine e.Indent 'Other = ' t.OtherTerm>
    <WriteOptions (e.Indent) e.Tail>;
}

$END Test.
