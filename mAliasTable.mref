$MODULE MAliasTable;

$IMPORT MError;
$IMPORT MSelfDiag;
$IMPORT MSymInfo;
$IMPORT MSymTable;

/*
Внутренний формат
	(AliasTable
		( (e.QNameInSrc) s.LinkType e.RealQName )*
	)
	Имя в исходном файле, например после <
	e.QNameInSrc ::= e.QName

	Реальное имя для компоновщика
	e.RealQName ::= e.QName

	Квалифицированное имя
	e.QName ::= (e.Qualifier)* (e.Name)

	Тип компоновки (Entry, Local, Swap)
	s.LinkType ::= Entry | Local |Swap
*/

/**
	<Create>
		== t.AliasTable
*/
$ENTRY Create = (AliasTable);

/**
	<Destroy t.AliasTable>
		== empty
*/

$ENTRY Destroy
	(AliasTable e.Aliases) = ;

/**
	<AddExternInfo t.AliasTable t.SymInfo>
		== t.UpdatedAliasTable t.SymInfo
*/
$ENTRY AddExternInfo
	t.AliasTable t.SymInfo =
		<MSelfDiag::Error 'Function AddExternInfo not implemented'>;

/**
	<AddLocalInfo t.AliasTable t.SymTable>
		== t.UpdatedAliasTable t.SymTable
*/
$ENTRY AddLocalInfo
	t.AliasTable t.SymTable =
		<AddLocalInfo--ModName
			t.AliasTable
			<MSymTable::ExtractModuleName-Qualified t.SymTable>
		>;

AddLocalInfo--ModName
	t.AliasTable t.SymTable e.QModName =
		<AddLocalInfo--Functions
			t.AliasTable (e.QModName)
			<MSymTable::ExtractLocalInfo t.SymTable>
		>;

//Проверяем на всякий случай совпадение имён
AddLocalInfo--Functions {
	(AliasTable
		e.Aliases-B
		( ((e.FnName)) s.ScopeClass e.RealQName )
		e.Aliases-E
	) (e.QModName)
	t.SymTable (s.ScopeClass2 e.FnName) e.OtherElements =
		<MSelfDiag::Error
			'in module mAliasTable in alias table alredy exist record about ' e.FnName
		>;

	(AliasTable e.Aliases)
	(e.QModName)
	t.SymTable (s.ScopeClass e.FnName) e.OtherElements =
		<AddLocalInfo--Functions
			(AliasTable
				e.Aliases
				( ((e.FnName)) s.ScopeClass e.QModName (e.FnName) )
			)
			t.SymTable e.OtherElements
		>;

	(AliasTable e.Aliases) (e.QModName) t.SymTable =
		(AliasTable e.Aliases) t.SymTable;
}

/**
	<GetRealName
		t.AliasTable
		t.ErrorList t.SrcPos
		e.QNameInSrc
	>
		== t.AliasTable t.ErrorList s.LinkType e.RealQName
		== t.AliasTable t.ErrorList NotFound
*/
$ENTRY GetRealName {
	(AliasTable
		e.Aliases-B
		( (e.QNameInSrc) s.LinkType e.RealQName )
		e.Aliases-E
	) t.ErrorList t.SrcPos
	e.QNameInSrc =
		(AliasTable
			e.Aliases-B
			( (e.QNameInSrc) s.LinkType e.RealQName )
			e.Aliases-E
		) t.ErrorList
		s.LinkType e.RealQName;

	(AliasTable e.Aliases)
	t.ErrorList t.SrcPos
	e.QNameInSrc =
		(AliasTable e.Aliases)
		<MError::AddUnresolvedFunction
			t.ErrorList t.SrcPos
			GenericQualified e.QNameInSrc;
		>
			
}

$END MAliasTable.