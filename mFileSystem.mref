$MODULE MFileSystem;

$IMPORT MDosWinRecoder;
$IMPORT MRefalRTS;
$IMPORT MOS;
$IMPORT FileIO;
$IMPORT MSelfDiag;
$IMPORT MStrings;
$IMPORT Math;

$ENTRY ExistFile e.FileName = <MRefalRTS::ExistFile e.FileName>;

$ENTRY ExistFile-T
	e.FileName = <MRefalRTS::ExistFile e.FileName> e.FileName;

$ENTRY FilesInfo
	e.Mask =
		<MOS::System
			'dir ' e.Mask '>~dirlst.tmp 2>nul'
		>
		<ParseListing
			<MDosWinRecoder::DosToWin
				<FileIO::Load '~dirlst.tmp'>
			>
		> <MOS::System 'del ~dirlst.tmp'>;

ParseListing {
	t.?Hdr1 t.?Hdr2 () (e.?Text1 s.Disk ':' e.Path) () e.Tail =
		<ReadFileList (s.Disk ':' e.Path) e.Tail>;

	e.Other = <MSelfDiag::Error 'Directory listing error: ' e.Other>;
}

ReadFileList {
	(e.Path) (e.Line) e.Tail =
		<AppendPath
			(e.Path)
			<ParseLine e.Line>
		> <ReadFileList (e.Path) e.Tail>;

	(e.Path) = ;
}

ParseLine {
	'   ' e.Tail = ;
	e.Line = <CutDateTime <MStrings::First 17 e.Line>>;
}

CutDateTime
	(e.DateTime) e.SizeAndName =
		(DateTime <ParseDateTime <MStrings::First 10 e.DateTime>>)
		<CutSize <MStrings::First 19 e.SizeAndName>>;

ParseDateTime (e.Date) e.Time =
	<ParseDate <Trim e.Date>>
	<ParseTime <Trim e.Time>>;

CutSize (e.Size) e.Name =
	(Size <ParseSize e.Size>)
	(LongName e.Name);

ParseSize {
	e.Begin ' ' e.End = <ParseSize e.Begin e.End>;
	'<' e.Catalog '>' = Directory;
	e.Digits = <MStrings::Numb e.Digits>;
}

Trim {
	' ' e.Line = <Trim e.Line>;
	e.Line ' ' = <Trim e.Line>;
	e.Line = e.Line;
}

ParseDate
	e.Day '.' e.Month '.' e.Year =
		<MStrings::Numb e.Year>
		<MStrings::Numb e.Month>
		<MStrings::Numb e.Day>;

ParseTime e.Hours ':' e.Minutes =
	<MStrings::Numb e.Hours>
	<MStrings::Numb e.Minutes>;

AppendPath {
	(e.Path) e.OtherInfo (LongName e.Name) =
		( (e.Path '\\' e.Name) e.OtherInfo (LongName e.Name) );

	(e.Path) = ;
}

$ENTRY FileAttribute
	s.Attribute e.FileName =
		<CheckExistAndGetAttrib
			s.Attribute
			<ExistFile-T e.FileName>
		>;

CheckExistAndGetAttrib {
	s.Attribute False e.FileName = FileNotFound;
	s.Attribute True e.FileName =
		<ExtractAttrib s.Attribute <FilesInfo e.FileName>>;
}

ExtractAttrib {
	s.Attrib ( t.Path e.Att-B (s.Attrib e.Value) e.Att-E ) =
		(e.Value);

	s.Attrib ( t.Path e.Attribs ) =
		<MSelfDiag::Error
			'Unknown file attribute ' s.Attrib
		>;

	s.Attrib t.OneFile e.Tail =
		<MSelfDiag::Error
			'Found many files in ExtractAttrib ' t.OneFile e.Tail
		>;
}

$ENTRY CompareFileTime {
	(s.SameField e.First) (s.SameField e.Second) =
		<CompareFileTime (e.First) (e.Second)>;

	() () = '=';

	(s.DiffField1 e.Tail1) (s.DiffField2 e.Tail2) =
		<Math::Compare s.DiffField1 s.DiffField2>;
}

/*
*****Код для Win95

ParseListing {
	() t.Hdr1 t.Hdr2 (e.Text1 s.Disk ':' e.Path) () e.Tail =
		<ReadFileList (s.Disk ':' e.Path) e.Tail>;

	e.Other = <MIntError::Error 'Directory listing error: ' e.Other>;
}

ReadFileList {
	(e.Path) (e.Line) e.Tail =
		<AppendPath
			(e.Path)
			<ParseLine e.Line>
		> <ReadFileList (e.Path) e.Tail>;

	(e.Path) = ;
}

ParseLine {
	'   ' e.Tail = ;
	e.Line = <Cut8-3 <MStrings::First 12 e.Line>>;
}

Cut8-3 (e.DosName) e.Tail =
	(DosName <ParseDosName <MStrings::First 8 e.DosName>>)
	<CutSize <MStrings::First 14 e.Tail>>;

CutSize (e.Size) e.Tail =
	(Size <ParseSize e.Size>)
	<CutDateTime <MStrings::First 18 e.Tail>>;

CutDateTime (e.DateTime ' ') e.LongName =
	(DateTime <ParseDateTime <MStrings::First 10 e.DateTime>>)
	(LongName e.LongName);

ParseDosName (e.Name) e.Ext = (<Trim e.Name>) <Trim e.Ext>;

ParseSize {
	e.Begin ' ' e.End = <ParseSize e.Begin e.End>;
	'<' e.Catalog '>' = Directory;
	e.Digits = <MStrings::Numb e.Digits>;
}

ParseDateTime (e.Date) e.Time =
	<ParseDate <Trim e.Date>>
	<ParseTime <Trim e.Time>>;

Trim {
	' ' e.Line = <Trim e.Line>;
	e.Line ' ' = <Trim e.Line>;
	e.Line = e.Line;
}

ParseDate
	e.Day '.' e.Month '.' e.Year =
		<ParseYear e.Year>
		<MStrings::Numb e.Month>
		<MStrings::Numb e.Day>;

ParseTime e.Hours ':' e.Minutes =
	<MStrings::Numb e.Hours>
	<MStrings::Numb e.Minutes>;

ParseYear {
	'0' s.Year = <MStrings::Numb '200' s.Year>;
	e.Year = <MStrings::Numb '19' e.Year>;
}

AppendPath {
	(e.Path) e.OtherInfo (LongName e.Name) =
		( (e.Path '\\' e.Name) e.OtherInfo (LongName e.Name) );

	(e.Path) = ;
}

$ENTRY FileAttribute
	s.Attribute e.FileName =
		<CheckExistAndGetAttrib
			s.Attribute
			<ExistFile-T e.FileName>
		>;

CheckExistAndGetAttrib {
	s.Attribute False e.FileName = FileNotFound;
	s.Attribute True e.FileName =
		<ExtractAttrib s.Attribute <FilesInfo e.FileName>>;
}

ExtractAttrib {
	s.Attrib ( t.Path e.Att-B (s.Attrib e.Value) e.Att-E ) =
		(e.Value);

	s.Attrib ( t.Path e.Attribs ) =
		<MIntError::Error
			'Unknown file attribute ' s.Attrib
		>;

	s.Attrib t.OneFile e.Tail =
		<MIntError::Error
			'Found many files in ExtractAttrib ' t.OneFile e.Tail
		>;
}

$ENTRY CompareFileTime {
	(s.SameField e.First) (s.SameField e.Second) =
		<CompareFileTime (e.First) (e.Second)>;

	() () = '=';

	(s.DiffField1 e.Tail1) (s.DiffField2 e.Tail2) =
		<Math::Compare s.DiffField1 s.DiffField2>;
}
 ^ Код для Windows 95*/

/**
	<ParseFileName e.FileName>
		== (e.Directory) e.FileNameNoExt (e.Ext)
	Пример:
	<ParseFileName 'c:\\Directory\\Document.doc'>
		== ('c;\\Directory') 'Document' ('doc')
*/
$ENTRY ParseFileName
	e.FileName =
		<DoParseExt e.FileName ()>;

DoParseExt {
	e.FileName '.' (e.Ext) =
		<DoParseDirectory (e.FileName)> (e.Ext);

	// Файл без расширения
	e.FileName '/' (e.Ext) =
		(e.FileName '/') e.Ext ();

	e.FileName '\\' (e.Ext) =
		(e.FileName '\\') e.Ext ();

	e.FileName ':' (e.Ext) =
		(e.FileName ':') e.Ext ();

	(e.Ext) =
		() e.Ext ();

	// Добавляем символ к расширению
	e.FileName s.Next (e.Ext) =
		<DoParseExt e.FileName (s.Next e.Ext)>;
}

DoParseDirectory {
	(e.Directory '/') e.Name =
		(e.Directory '/') e.Name;

	(e.Directory '\\') e.Name =
		(e.Directory '\\') e.Name;

	(e.Directory ':') e.Name =
		(e.Directory ':') e.Name;

	() e.Name = () e.Name;

	(e.Directory s.Next) e.Name =
		<DoParseDirectory (e.Directory) s.Next e.Name>;
}

$END MFileSystem.
