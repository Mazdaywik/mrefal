$MODULE MFnPtrAdder;

$IMPORT MSelfDiag;
$IMPORT MSymTable;
$IMPORT MQualifiedName;

/**
	<AddFnPtr t.SymTable e.OldQualifiedList>
		== t.UpdatedSymTable
	e.OldQualifiedList ::= ( t.ModuleLocation (e.EntryFnName)* )*
	t.ModuleLocation ::= ((e.Directory) e.ModuleName)
*/
$ENTRY AddFnPtr
	t.SymTable e.OldQualifiedList =
		<CheckNeedAdd
			<MSymTable::GetAttrib
				t.SymTable 'FnPtr' Kind
			> e.OldQualifiedList
		>;

CheckNeedAdd {
	t.SymTable Found s.Kind e.OldQualifiedList =
		t.SymTable;

	t.SymTable NoName e.OldQualifiedList =
		<GenerateAndAdd
			(<MSymTable::FindByKind t.SymTable Function>)
			e.OldQualifiedList
		>;

	t.SymTable NoAttrib e.OldQualifiedList =
		<MSelfDiag::Error
			'MFnPtrAdder::CheckNeedAdd: entity FnPtr haven\'t attribute Kind'
		>;
}

GenerateAndAdd
	(t.SymTable e.Functions) e.OldQualifiedList =
		<GenerateAndAdd-Aux
			<GetScopeClasses
				t.SymTable e.Functions
			> e.OldQualifiedList
		>;

GenerateAndAdd-Aux
	t.SymTable (e.ModuleName) (e.LocalList) e.OldQualifiedList =
		<MSymTable::UpdateAttribSet
			t.SymTable ('FnPtr')
			(Kind Function)
			(ScopeClass Local)
			(Body
				<GenerateBody
					(e.ModuleName)
					(e.LocalList)
					e.OldQualifiedList
				>
			)
		>;

/*
	<GetScopeClasses t.SymTable e.Names>
		== t.SymTable (e.ModuleName) (e.Functions)
*/
GetScopeClasses
	t.SymTable e.Names =
		<DoGetScopeClasses
			t.SymTable (/*Functions*/) e.Names
		>;

DoGetScopeClasses {
	t.SymTable (e.Scanned) (e.NextName) e.Tail =
		<DoGetScopeClasses
			<GetScopeClass
				<MSymTable::GetAttrib
					t.SymTable e.NextName ScopeClass
				> (e.Scanned) (e.NextName)
			> e.Tail
		>;

	t.SymTable (e.Scanned) =
		<MSymTable::FindByKind t.SymTable ModuleName>
		(e.Scanned);
}

GetScopeClass
	t.SymTable Found s.ScopeClass (e.Scanned) (e.NextName) =
		t.SymTable (e.Scanned (s.ScopeClass e.NextName));

GenerateBody
	(e.ModuleName) (e.LocalList) e.OldQualifiedList =
		<DoGenerateBody-Qualified
			<DoGenerateBody-Locals
				(e.ModuleName)
				( /*Sentences*/ )
				e.LocalList
			> e.OldQualifiedList
		>;

DoGenerateBody-Locals {
	(e.ModuleName) (e.Sentences) (s.ScopeClass e.Name) e.Tail =
		<DoGenerateBody-Locals
			(e.ModuleName)
			(e.Sentences
				(
					( (Identifier e.Name) )
					(
						(FnPtr
							(s.ScopeClass
								<MQualifiedName::Create (e.ModuleName) (e.Name)>
							)
						)
					)
				)
			) e.Tail
		>;

	(e.ModuleName) (e.Sentences) =
		(e.Sentences);
}

DoGenerateBody-Qualified {
	(e.Sentences) ( (() e.ModuleName) (e.FnName) e.OtherFunctions )
	e.OldQualifiedList =
		<DoGenerateBody-Qualified
			(e.Sentences
				(
					( (Identifier e.ModuleName) (Identifier e.FnName) )
					(
						(FnPtr
							(Entry
								<MQualifiedName::Create (e.ModuleName) (e.FnName)>
							)
						)
					)
				)
			)
			( (() e.ModuleName) e.OtherFunctions ) e.OldQualifiedList
		>;

	(e.Sentences) ( (() e.ModuleName) ) e.OldQualifiedList =
		<DoGenerateBody-Qualified
			(e.Sentences) e.OldQualifiedList
		>;

	(e.Sentences) = (e.Sentences);
}

$END MFnPtrAdder.