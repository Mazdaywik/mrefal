$MODULE MFrontEnd;

$IMPORT MParser;
$IMPORT MSymTable;

/**
	<LoadModule e.SourceName>
		== t.Module s.Status t.ErrorList
	s.Status ::= Success | Warnings | Errors | Fatal
*/
$ENTRY LoadModule
	e.SourceName =
		<MParser::SrcModule e.SourceName>;

/**
	<SymInfo-Old t.Module>
		== t.Module
		( Module (e.Directory) e.ModuleName )
		( Functions (e.FnName)* )
		( Imports ((e.ImportDirectory) e.ImportName)* )
*/
$ENTRY SymInfo-Old
	t.Module =
		<SymInfo-Imports
			<MSymTable::FindByKind t.Module ImportName>
		>;

SymInfo-Imports
	t.Module e.Imports =
		<SymInfo-Functions
			<MSymTable::FindByKind t.Module Function>
		>
		<MakeImports e.Imports>;

SymInfo-Functions
	t.Module e.Functions =
		<FilterEntry
			t.Module () e.Functions
		>;

FilterEntry {
	t.Module (e.Entries) (e.NextFn) e.Tail =
		<FilterEntry
			<CheckEntry
				<MSymTable::GetAttrib t.Module e.NextFn ScopeClass>
				(e.Entries) e.NextFn
			>
		>;

	t.Module (e.Entries) =
		<SymInfo-ModuleName
			<MSymTable::FindByKind t.Module ModuleName>
		>
		<MakeEntries e.Entries>;
}

CheckEntry {
	t.Module Found Entry (e.Entries) e.Name =
		t.Module (e.Entries (e.Name));

	t.Module Found s.Other (e.Entries) e.Name =
		t.Module (e.Entries);
}

SymInfo-ModuleName
	t.Module (e.ModuleName) =
		t.Module
		(Module () e.ModuleName);

MakeEntries
	e.Entries =
		(Functions e.Entries);

MakeImports
	e.Imports =
		(Imports <AddEmpty e.Imports>);

AddEmpty {
	(e.Next) e.Tail =
		(() e.Next) <AddEmpty e.Tail>;

	= ;
}

$END MFrontEnd.
