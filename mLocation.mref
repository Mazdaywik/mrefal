$MODULE MLocation;

$IMPORT Context;
$IMPORT Modules;

/**
	<LookupModule-T t.Context (e.Directory) e.ModuleName>
		== t.Context
			s.Known s.Status
			(Sym e.SymFileName)
			(Out e.OutFileName)
			(Src e.SrcFileName)
			(e.Directory) e.ModuleName
	s.Known ::= Known | NotKnown
	s.Status ::=
		if Known
			Recompiled | Updated | Library | InCompiling
		if NotKnown
			ModuleNotFound | Library | SystemLibrary | NeedRecompile | SrcNotUpdated
*/
$ENTRY LookupModule-T
	t.Context () e.ModuleName =
		<SwKnown
			(e.ModuleName)
			<Context::ExtractOption
				t.Context Status e.ModuleName
			>
		>;

SwKnown {
	(e.ModuleName) t.Context Found s.Status =
		<OnKnown-Src
			(e.ModuleName) s.Status
			<Context::ExtractOption
				t.Context Src e.ModuleName
			>
		>;

	(e.ModuleName) t.Context ModuleInfoNotFound =
		t.Context
		<OnUnknown
			<Modules::LookupModule-T e.ModuleName>
		>;
}

OnKnown-Src
	(e.ModuleName) s.Status t.Context Found e.SrcName =
		<OnKnown-Out
			(e.ModuleName) s.Status
			<Context::ExtractOption
				t.Context Out e.ModuleName
			>
		> (Src e.SrcName)
		( /* e.Directory */ ) e.ModuleName;

OnKnown-Out
	(e.ModuleName) s.Status t.Context Found e.OutName =
		<OnKnown-Sym
			(e.ModuleName) s.Status
			<Context::ExtractOption
				t.Context Sym e.ModuleName
			>
		> (Out e.OutName);

OnKnown-Sym
	(e.ModuleName) s.Status t.Context Found e.SymName =
		t.Context Known s.Status
		(Sym e.SymName);

OnUnknown
	s.Status (Sym e.SymName) (Out e.OutName) (Src e.SrcName) e.ModuleName =
		NotKnown s.Status
		(Sym e.SymName)
		(Out e.OutName)
		(Src e.SrcName)
		( /* e.Directory */ ) e.ModuleName;

$END MLocation.
