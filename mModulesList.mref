$MODULE MModulesList;

$IMPORT MSelfDiag;

$ENTRY UpdateModuleInfo {
	(ModulesList
		e.OtherModules-B
		( (Name e.ModuleName) e.Options )
		e.OtherModules-E
	) (e.ModuleName) e.NewOptions =
		(ModulesList
			e.OtherModules-B
			( (Name e.ModuleName)
				<UpdateOptions (e.Options) e.NewOptions>
			) e.OtherModules-E
		);

	(ModulesList e.OtherModules)
	(e.ModuleName) e.NewOptions =
		(ModulesList e.OtherModules
			( (Name e.ModuleName)
				<UpdateOptions
					( (Sym None)
						(Out None)
						(Src None)
						(Status Unknown)
					) e.NewOptions
				>
			)
		);
}

UpdateOptions {
	( (s.Option e.OldVal) e.OldOptions )
	e.NewOptions-B (s.Option e.NewVal) e.NewOptions-E =
		(s.Option e.NewVal)
		<UpdateOptions
			( e.OldOptions )
			e.NewOptions-B
			e.NewOptions-E
		>;

	( t.Option e.OldOptions ) e.NewOptions =
		t.Option <UpdateOptions (e.OldOptions) e.NewOptions>;

	() e.NewOptions =
		<MSelfDiag::Assert-Eq
			(e.NewOptions) ()
			'Unknown options in function Context::UpdateOptions: '
			e.NewOptions
		>;
}

$ENTRY LastModule {
	( ModulesList
		e.Modules-B
		( (Name e.ModuleName) e.Info )
		e.Modules-E
	) e.ModuleName =
		( ModulesList
			e.Modules-B e.Modules-E
			( (Name e.ModuleName) e.Info )
		);

	( ModulesList e.Modules ) e.ModuleName =
		<MSelfDiag::Error
			'<LastModule>: module ' e.ModuleName ' not found'
		>;
}

$ENTRY ExtractOption {
	(ModulesList e.Modules-B ( (Name e.ModuleName) e.Options ) e.Modules-E)
	s.Option e.ModuleName =
		Found <FindOption s.Option e.Options>;

	t.ModulesList s.Option e.ModuleName =
		ModuleInfoNotFound;
}

FindOption {
	s.Option e.Options-B (s.Option e.Value) e.Options-E =
		e.Value;

	s.Option e.Options =
		<MSelfDiag::Error
			'Option ' s.Option ' not found in module info.'
		>;
}

$ENTRY GetProgName
	( ModulesList e.Modules ( (Name e.LastName) e.Info ) ) =
		e.LastName;

$ENTRY ExtractModulesList
	( ModulesList e.Modules ) =
		<DoExtractModulesList
			e.Modules
		>;

DoExtractModulesList {
	( (Name e.ModName) e.Info ) e.Modules =
		(e.ModName) <DoExtractModulesList e.Modules>;

	= ;
}

$END MModulesList.
