$MODULE MSwapSupport;

/**=============================================================================
	Модуль предоставляет функции для наиболее распространённых функций с
	динамическими ящиками: чтение, запись, добавление терма в начало/конец,
	чтение терма с начала/конца.
==============================================================================*/

/**
	<Read s.FnSwap>
		== e.Content
	Содержимое ящика не изменяется.
*/
$ENTRY Read
	s.FnSwap =
		<ReadAndReturn s.FnSwap <s.FnSwap>>;

ReadAndReturn
	s.FnSwap e.Content =
		<s.FnSwap e.Content> e.Content;

/**
	<Write s.FnSwap e.NewContent>
		== empty
	Ящик получает значение e.NewContent
*/
$ENTRY Write
	s.FnSwap e.NewContent =
		<Nil <s.FnSwap e.NewContent>>;

Nil e.AnyValue = ;

/**
	<PushFront s.FnSwap t.Info>
		== empty
	Эквивалентно <s.FnSwap t.Info <s.FnSwap>>
*/
$ENTRY PushFront
	s.FnSwap t.Info =
		<s.FnSwap t.Info <s.FnSwap>>;

/**
	<PushBack s.FnSwap t.Info>
		== empty
	Эквивалентно <s.FnSwap <s.FnSwap> t.Info>
*/
$ENTRY PushBack
	s.FnSwap t.Info =
		<s.FnSwap <s.FnSwap> t.Info>;

/**
	<PopFront s.FnSwap>
		== Success t.Value
		== Fails
	Если <s.FnSwap> :: t.Value e.Content То
		<s.FnSwap e.Content>
		Success t.Value
	Иначе
		Fails
*/
$ENTRY PopFront
	s.FnSwap = <ReturnPopFront s.FnSwap <s.FnSwap>>;

ReturnPopFront {
	s.FnSwap t.Value e.Tail =
		<s.FnSwap e.Tail> Success t.Value;

	s.FnSwap = Fails;
}

/**
	<PopBack s.FnSwap>
		== Success t.Value
		== Fails
	См. описание функции PopFront.
*/
$ENTRY PopBack
	s.FnSwap = <ReturnPopBack s.FnSwap <s.FnSwap>>;

ReturnPopBack {
	s.FnSwap e.Start t.Last =
		<s.FnSwap e.Start> Success t.Last;

	s.FnSwap = Fails;
}

$END MSwapSupport.
