$MODULE MSymInfo;

$IMPORT MSelfDiag;
$IMPORT MSymTable;

/**
	<Create>
		== t.SymInfo
	<Create e.QualifiedModuleName>
		== t.SymInfo
*/
$ENTRY Create {
	= (SymInfo (Module) (Functions) (Imports));

	e.QualifiedModuleName =
		(SymInfo
			(Module e.QualifiedModuleName)
			(Functions) (Imports)
		);
}

/**
	<Destroy t.SymInfo>
		== empty
*/
$ENTRY Destroy
	(SymInfo
		(Module e.ModuleName)
		(Functions e.FunctionList)
		(Imports e.ImportList)
	) = ;

/**
	<LoadForModule t.Context e.QualifiedModuleName>
		== t.SymInfo t.Context
*/
$ENTRY LoadForModule
	e.QualifiedModuleName =
		<MSelfDiag::Error
			'Function LoadForModule not implemented'
		>;

/**
	<LoadFromFile e.FileName>
		== t.SymInfo
*/
$ENTRY LoadFromFile
	e.FileName =
		<MSelfDiag::Error
			'Function LoadFromFile not implemented'
		>;

/**
	<SaveForModule t.SymInfo t.Context>
		== t.Context
*/
$ENTRY SaveForModule
	t.SymInfo t.Context =
		<MSelfDiag::Error
			'Function SaveForModule not implemented'
		>;

/**
	<SaveForModule-T t.SymInfo t.Context>
		== t.SymInfo t.Context
*/
$ENTRY SaveForModule-T
	t.SymInfo t.Context =
		<MSelfDiag::Error
			'Function SaveForModule-T not implemented'
		>;

/**
	<SaveToFile t.SymInfo>
		== empty
*/
$ENTRY SaveToFile
	t.SymInfo =
		<MSelfDiag::Error
			'Function SaveToFile not implemented'
		>;

/**
	<SaveToFile-T t.SymInfo>
		== t.SymInfo
*/
$ENTRY SaveToFile-T
	t.SymInfo =
		<MSelfDiag::Error
			'Function SaveToFile-T not implemented'
		>;

/**
	<ToOldSymInfo t.SymInfo>
		= e.OldSymInfo
*/
$ENTRY ToOldSymInfo
	t.SymInfo =
		<DestroySymInfo
			<ToOldSymInfo-T t.SymInfo>
		>;

DestroySymInfo
	t.SymInfo t.Module t.Functions t.Imports =
		<Destroy t.SymInfo>
		t.Module t.Functions t.Imports;

/**
	<ToOldSymInfo-T t.SymInfo>
		= t.SymInfo e.OldSymInfo
*/
$ENTRY ToOldSymInfo-T
	(SymInfo
		(Module e.QualifiedName)
		(Functions e.FunctionList)
		(Imports e.ImportList)
	) =
		(SymInfo
			(Module e.QualifiedName)
			(Functions e.FunctionList)
			(Imports e.ImportList)
		)
		( Module
			<Qualified-To-ModuleLocation e.QualifiedName>
		)
		( Functions e.FunctionList )
		( Imports
			<QualifiedList-To-ModuleLocation
				e.ImportList
			>
		);

Qualified-To-ModuleLocation {
	e.Location (e.LastName) =
		(e.Location) e.LastName;

	e.PlaneName = () e.PlaneName;
}

QualifiedList-To-ModuleLocation {
	(e.Qualified) e.Tail =
		(<Qualified-To-ModuleLocation e.Qualified>)
		<QualifiedList-To-ModuleLocation e.Tail>;

	= ;
}

/**
	<CreateFromSymTable t.SymTable>
		== t.SymTable t.SymInfo
*/
$ENTRY CreateFromSymTable
	t.SymTable =
		<AddModuleName
			<Create>
			<MSymTable::ExtractCurrentModule-NoQualified t.SymTable>
		>;

AddModuleName
	(SymInfo (Module) (Functions) (Imports))
	t.SymTable e.QualifiedModuleName =
		<AddEntryFunctions
			(SymInfo (Module e.QualifiedModuleName) (Functions) (Imports))
			<MSymTable::ExtractEntryFunctions t.SymTable>
		>;

AddEntryFunctions
	(SymInfo t.ModuleName (Functions) (Imports))
	t.SymTable e.EntryList =
		<AddImportsList
			(SymInfo
				t.ModuleName
				(Functions e.EntryList)
				(Imports)
			)
			<MSymTable::ExtractImportList t.SymTable>
		>;

AddImportsList
	(SymInfo t.ModuleName t.Functions (Imports))
	t.SymTable e.ModulesList =
		t.SymTable
		(SymInfo
			t.ModuleName
			t.Functions
			(Imports e.ModulesList)
		);

$END MSymInfo.